(()=>{"use strict";var e,t={187:(e,t,i)=>{e.exports=i.p+"assets/67bed3a40863d023cec5.png"},232:(e,t,i)=>{e.exports=i.p+"assets/6f651cc02b3672c10c18.png"},267:(e,t,i)=>{e.exports=i.p+"assets/b3a55fc806c21608ebf4.png"},292:(e,t,i)=>{e.exports=i.p+"assets/bd51e7f6581280bda905.png"},356:(e,t,i)=>{e.exports=i.p+"assets/d52ae84593e3ff7444bc.png"},378:(e,t,i)=>{e.exports=i.p+"assets/a0309997293f5327c5cd.png"},778:(e,t,i)=>{e.exports=i.p+"assets/5db4af16ea03477fd9d2.png"},1016:(e,t,i)=>{i.d(t,{A:()=>o});var n=i(1601),s=i.n(n),r=i(6314),a=i.n(r)()(s());a.push([e.id,"body {\n    margin: 0;\n    padding: 0;\n    background-color: #000;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n}\n\n#game-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n",""]);const o=a},1025:(e,t,i)=>{e.exports=i.p+"assets/af4fb9967550579a6a2d.png"},1031:(e,t,i)=>{e.exports=i.p+"assets/e2d0b7bb00dc050dbded.png"},1086:(e,t,i)=>{e.exports=i.p+"assets/25f8d73ce476e5ce4026.png"},1150:(e,t,i)=>{e.exports=i.p+"assets/1828545ca4e429ee92aa.png"},1361:(e,t,i)=>{e.exports=i.p+"assets/3c65ca6e0d3e486ae839.png"},1484:(e,t,i)=>{e.exports=i.p+"assets/c7ad83c308245eec1e63.png"},1485:(e,t,i)=>{e.exports=i.p+"assets/e7fbdee20e599a2beae7.png"},1673:(e,t,i)=>{e.exports=i.p+"assets/f76b91c3c6e5b5f4bc8d.png"},1922:(e,t,i)=>{e.exports=i.p+"assets/1605cd6f3bd4450ddfa1.png"},1979:(e,t,i)=>{e.exports=i.p+"assets/cecb075126fc419dbe63.png"},2170:(e,t,i)=>{e.exports=i.p+"assets/05b60925961fadd8f190.png"},2216:(e,t,i)=>{e.exports=i.p+"assets/f6039a155ac431ab54fc.png"},2266:(e,t,i)=>{e.exports=i.p+"assets/6f909762251412d4aaa5.png"},2369:(e,t,i)=>{e.exports=i.p+"assets/0f9295326cedb56306e1.png"},2546:(e,t,i)=>{e.exports=i.p+"assets/eda7645a8d8f056425f0.png"},2704:(e,t,i)=>{e.exports=i.p+"assets/cfdb61d8e035153a15d8.png"},2849:(e,t,i)=>{e.exports=i.p+"assets/bdb40523fbfc6ea93281.png"},2993:(e,t,i)=>{e.exports=i.p+"assets/b798677d0bdff2d18281.png"},3113:(e,t,i)=>{e.exports=i.p+"assets/4068663d186eba5a9db5.png"},3315:(e,t,i)=>{e.exports=i.p+"assets/5f05503e6fed1f8b1c07.png"},3614:(e,t,i)=>{e.exports=i.p+"assets/0304956198525c188410.png"},3646:(e,t,i)=>{e.exports=i.p+"assets/cc8be943bef3ff98753b.png"},4005:(e,t,i)=>{e.exports=i.p+"assets/9d9e71362f2e5a9b63b5.png"},4332:(e,t,i)=>{e.exports=i.p+"assets/4ede85e27cdf9e7b856d.png"},4633:(e,t,i)=>{e.exports=i.p+"assets/14734944376b112240f9.png"},4960:(e,t,i)=>{e.exports=i.p+"assets/879bd62e40231f3ac1a6.png"},5148:(e,t,i)=>{e.exports=i.p+"assets/d2cd7cdde53bd5de67ae.png"},5586:(e,t,i)=>{e.exports=i.p+"assets/77464ded1b3a766a7caa.png"},5713:(e,t,i)=>{e.exports=i.p+"assets/68a19f6cf378d17550c8.png"},5830:(e,t,i)=>{e.exports=i.p+"assets/3309948298d7888abcff.png"},5899:(e,t,i)=>{e.exports=i.p+"assets/097ee7ddbc439af9d766.png"},6211:(e,t,i)=>{e.exports=i.p+"assets/a9c1d6da15322f7460dc.png"},6466:(e,t,i)=>{e.exports=i.p+"assets/30f7ac059ecb49c07eb0.png"},6625:(e,t,i)=>{e.exports=i.p+"assets/a4f588bf099e1fe82f86.png"},6743:(e,t,i)=>{e.exports=i.p+"assets/b04ea6fd1d4193f9afd8.png"},6905:(e,t,i)=>{e.exports=i.p+"assets/23c0c1898d14c16168ca.png"},6935:(e,t,i)=>{e.exports=i.p+"assets/f3dd8892feeb77b7cca1.png"},6973:(e,t,i)=>{e.exports=i.p+"assets/72be1fdf78715c08a630.png"},7339:(e,t,i)=>{e.exports=i.p+"assets/502ea8cf41b58489d9aa.png"},8029:(e,t,i)=>{e.exports=i.p+"assets/54ff3fb599d81e842396.png"},8338:(e,t,i)=>{e.exports=i.p+"assets/0d0e6dc55a22dd520357.png"},8531:(e,t,i)=>{e.exports=i.p+"assets/f14d42a428c668aa2a02.png"},8762:(e,t,i)=>{var n={};i.r(n),i.d(n,{LEVEL_2_MAP:()=>N,LEVEL_3_MAP:()=>v,LEVEL_4_MAP:()=>P,LEVEL_5_MAP:()=>D,TUTORIAL_MAP:()=>M});var s=i(4440),r=i.n(s),a=i(5072),o=i.n(a),d=i(7825),c=i.n(d),l=i(7659),h=i.n(l),u=i(5056),g=i.n(u),f=i(540),p=i.n(f),R=i(1113),E=i.n(R),S=i(1016),y={};y.styleTagTransform=E(),y.setAttributes=g(),y.insert=h().bind(null,"head"),y.domAPI=c(),y.insertStyleElement=p();o()(S.A,y);S.A&&S.A.locals&&S.A.locals;const C=64,T={IRON:"iron",STEEL:"steel",CONCRETE:"concrete",WATER:"water",FUEL:"fuel",DRONES:"drones",ENERGY:"energy",REPUTATION:"reputation"},m={PLAIN:{id:"plain",name:"Plain Ground",description:"Regular Martian surface",texture:"terrainPlain1"}},I={METAL:{id:"metal",name:"Metal Deposit",description:"Rich in iron ore",textures:["ironDeposit1","ironDeposit2","ironDeposit3"],texture:"ironDeposit1"},WATER:{id:"water",name:"Water Deposit",description:"Frozen water under the surface",texture:"waterDeposit"},MOUNTAIN:{id:"mountain",name:"Mountain",description:"Rough terrain, difficult to build on",textures:["mountainTile1","mountainTile2"],texture:"mountainTile1"}},x={DRONE_DEPO:{id:"droneDepo",name:"Drone Depo",shortName:"Drone Depo",description:"Produces drones immediately when built.",production:{[T.DRONES]:7},consumption:{},terrainRequirement:null,texture:"droneDepo"},IRON_MINE:{id:"ironMine",name:"Iron Mine",shortName:"Iron Mine",description:"Extracts iron from metal deposits",production:{[T.IRON]:3},consumption:{},terrainRequirement:I.METAL.id,texture:"ironMine"},STEELWORKS:{id:"steelworks",name:"Steelworks",shortName:"Steelworks",description:"Converts iron to steel each turn, requires iron",production:{[T.STEEL]:1},consumption:{[T.IRON]:2},terrainRequirement:null,texture:"steelworks"},CONCRETE_HARVESTER:{id:"concreteMixer",name:"Concrete Harvester",shortName:"Concrete",description:"Produces concrete from regolith each turn",production:{[T.CONCRETE]:3},consumption:{},terrainRequirement:null,texture:"concreteMixer"},WATER_PUMP:{id:"waterPump",name:"Water Pump",shortName:"Water Pump",description:"Extracts water from deposits each turn",production:{[T.WATER]:3},consumption:{},terrainRequirement:I.WATER.id,texture:"waterPump"},FUEL_REFINERY:{id:"fuelRefinery",name:"Fuel Refinery",shortName:"Fuel",description:"Converts water to rocket fuel each turn",production:{[T.FUEL]:1},consumption:{[T.WATER]:2},terrainRequirement:null,texture:"fuelRefinery"},WIND_TURBINE:{id:"windTurbine",name:"Wind Turbine",shortName:"Wind",description:"Generates energy immediately when built",production:{[T.ENERGY]:6},consumption:{},terrainRequirement:null,texture:"windTurbine"},SOLAR_PANELS:{id:"solarPanel",name:"Solar Panels",shortName:"Solar",description:"Generates energy immediately when built",production:{[T.ENERGY]:3},consumption:{},terrainRequirement:null,texture:"solarPanel"},LAUNCH_PAD:{id:"launchPad",name:"Launch Pad",shortName:"Launcher",description:"Allows manual rocket launches for reputation. Rockets return after 1 turn.",production:{},consumption:{},terrainRequirement:null,texture:"launchPad",launchCost:{[T.FUEL]:10,[T.STEEL]:10},launchReward:10},LAUNCH_PAD_SURROUNDING:{id:"launchPadSurrounding",name:"Launch Pad Surrounding",shortName:"Launch Area",description:"Part of the launch pad area, cannot be built on.",production:{},consumption:{},terrainRequirement:null,texture:"launchPadSurrounding"},WIND_TURBINE_SURROUNDING:{id:"windTurbineSurrounding",name:"Wind Turbine Surrounding",shortName:"Wind Area",description:"Part of the wind turbine area, cannot be built on.",production:{},consumption:{},terrainRequirement:null,texture:"windTurbineSurrounding"},TESLA_COIL:{id:"teslaCoil",name:"Tesla Coil",shortName:"Tesla",description:"Generates a lot of energy immediately when built. Must be placed on water deposits.",production:{[T.ENERGY]:12},consumption:{},terrainRequirement:I.WATER.id,texture:"teslaCoil"},ARTIFICIAL_LIGHTS:{id:"artificialLights",name:"Artificial Lights",shortName:"Lights",description:"Generates respect by makeing the colony look nice.",production:{[T.REPUTATION]:2},consumption:{},terrainRequirement:null,texture:"artificialLights"}},A={DRONE_DEPO_CARD:{id:"droneDepoCard",name:"Drone Depo",description:"Build a drone depo to produce drones and provide +1 production bonus to adjacent buildings",buildingId:"droneDepo",cardTexture:"droneDepo",cardType:"building",cost:{[T.CONCRETE]:3}},IRON_MINE_CARD:{id:"ironMineCard",name:"Iron Mine",description:"Build an iron mine on a metal deposit",buildingId:"ironMine",cardType:"building",cost:{[T.CONCRETE]:2,[T.DRONES]:2,[T.ENERGY]:1}},STEELWORKS_CARD:{id:"steelworksCard",name:"Steelworks",description:"Build a steelworks to convert iron to steel",buildingId:"steelworks",cardType:"building",cost:{[T.CONCRETE]:3,[T.STEEL]:2,[T.DRONES]:1,[T.ENERGY]:3}},CONCRETE_HARVESTER_CARD:{id:"concreteMixerCard",name:"Concrete",description:"Build a concrete harvester to produce concrete",buildingId:"concreteMixer",cardType:"building",cost:{[T.STEEL]:1,[T.DRONES]:3,[T.ENERGY]:1}},WATER_PUMP_CARD:{id:"waterPumpCard",name:"Water Pump",description:"Build a water pump on a water deposit",buildingId:"waterPump",cardType:"building",cost:{[T.CONCRETE]:3,[T.DRONES]:1,[T.ENERGY]:1}},FUEL_REFINERY_CARD:{id:"fuelRefineryCard",name:"Fuel",description:"Build a fuel refinery to convert water to fuel",buildingId:"fuelRefinery",cardType:"building",cost:{[T.CONCRETE]:3,[T.STEEL]:1,[T.DRONES]:1,[T.ENERGY]:2}},WIND_TURBINE_CARD:{id:"windTurbineCard",name:"Wind",description:"Build a wind turbine to generate energy",buildingId:"windTurbine",cardType:"building",cost:{[T.CONCRETE]:4}},SOLAR_PANEL_CARD:{id:"solarPanelCard",name:"Solar",description:"Build solar panels to generate energy",buildingId:"solarPanel",cardType:"building",cost:{[T.CONCRETE]:1,[T.STEEL]:1,[T.DRONES]:1}},LAUNCH_PAD_CARD:{id:"launchPadCard",name:"Launch Pad",description:"Build a launch pad to send rocket shipments to the orbit earning reputation",buildingId:"launchPad",cardType:"building",cardTexture:"launchPadIcon",cost:{[T.CONCRETE]:5,[T.STEEL]:2,[T.DRONES]:1},effects:[{type:"action",action:"launchRocket",name:"Launch",cost:{[T.FUEL]:10,[T.STEEL]:10},cooldown:2,effects:[{type:"addResource",resource:T.REPUTATION,amount:10}]}]},ARTIFICIAL_LIGHTS_CARD:{id:"artificialLightsCard",name:"Artificial Lights",description:"Build artificial lights - makes the area pretty and continuously brings respect to the colony",buildingId:"artificialLights",cardType:"building",cost:{[T.CONCRETE]:2,[T.ENERGY]:2,[T.DRONES]:1}},IRON_MINE_PREFAB_CARD:{id:"ironMinePrefabCard",name:"*Iron Mine*",description:"Build an iron mine on a metal deposit. Being a prefab this card requires way less resources to build.",buildingId:"ironMine",cardType:"prefab",cost:{[T.ENERGY]:1}},STEELWORKS_PREFAB_CARD:{id:"steelworksPrefabCard",name:"*Steelworks*",description:"Build a steelworks to convert iron to steel. Being a prefab this card requires way less resources to build.",buildingId:"steelworks",cardType:"prefab",cost:{[T.ENERGY]:3}},TESLA_COIL_PREFAB_CARD:{id:"teslaCoilPrefabCard",name:"*Tesla Coil*",description:"Build a tesla coil to generate a lot of energy. Being a prefab this card requires way less resources to build.",buildingId:"teslaCoil",cardType:"prefab",cost:{[T.CONCRETE]:2}},SCRAP_DRONES_EVENT:{id:"scrapDronesEvent",name:"Scrap Drones",description:"Convert scrap metal into 5 drones",cardType:"event",cardTexture:"droneIcon",cost:{[T.IRON]:1},effects:[{type:"addResource",resource:T.DRONES,amount:5}]},RESOURCE_SUPPLY_EVENT:{id:"resourceSupplyEvent",name:"Resources",description:"Increase the supply of steel and concrete by 5 each",cardType:"event",cardTexture:"resourceSupplyIcon",cost:{},effects:[{type:"addResource",resource:T.STEEL,amount:5},{type:"addResource",resource:T.CONCRETE,amount:5}]},BARTER_EVENT:{id:"barterEvent",name:"Barter",description:"Trade 10 concrete for 3 steel and 3 fuel",cardType:"event",cardTexture:"barterIcon",cost:{[T.CONCRETE]:10},effects:[{type:"addResource",resource:T.STEEL,amount:3},{type:"addResource",resource:T.FUEL,amount:3}]},EXPORT_WATER_EVENT:{id:"exportWaterEvent",name:"Export Water",description:"Export 10 water for 5 fuel",cardType:"event",cardTexture:"waterIcon",cost:{[T.WATER]:10},effects:[{type:"addResource",resource:T.FUEL,amount:5}]},EXPORT_IRON_EVENT:{id:"exportIronEvent",name:"Export Iron",description:"Export 15 iron for 5 fuel",cardType:"event",cardTexture:"ironIcon",cost:{[T.IRON]:15},effects:[{type:"addResource",resource:T.FUEL,amount:5}]},CHARITY_EVENT:{id:"charityEvent",name:"Charity",description:"Charity event - provide resources to another colony for 5 reputation",cardType:"event",cardTexture:"charityIcon",cost:{[T.CONCRETE]:5,[T.IRON]:5,[T.WATER]:5,[T.STEEL]:3,[T.FUEL]:3},effects:[{type:"addResource",resource:T.REPUTATION,amount:5}]}},b={droneDepoCard:3,ironMineCard:5,steelworksCard:3,concreteMixerCard:5,waterPumpCard:5,fuelRefineryCard:3,windTurbineCard:4,solarPanelCard:4},w={droneDepoCard:!0,windTurbineCard:!0,launchPadCard:!0},O={STARTING_HAND_REWARDS:{IRON_MINE_PREFAB_STARTING_REWARD:{id:"ironMinePrefabStartingReward",name:"Iron Mine Prefab",description:"Start with an additional Iron Mine Prefab card in your hand",image:"ironMine",applicationType:"startingHand",effects:[{cardId:"ironMinePrefabCard"}]},STEELWORKS_PREFAB_STARTING_REWARD:{id:"steelworksPrefabStartingReward",name:"Steelworks Prefab",description:"Start with an additional Steelworks Prefab card in your hand",image:"steelworks",applicationType:"startingHand",effects:[{cardId:"steelworksPrefabCard"}]},TESLA_COIL_PREFAB_STARTING_REWARD:{id:"teslaCoilPrefabStartingReward",name:"Tesla Coil",description:"Start with a Tesla Coil card in your hand, Tesla Coil produces a lot of energy",image:"teslaCoil",applicationType:"startingHand",effects:[{cardId:"teslaCoilPrefabCard"}]}},DECK_CARDS_REWARDS:{DRONE_EVENT_DECK_REWARD:{id:"droneEventDeckReward",name:"Drone Event",description:"Add two Drone Event cards to your deck",image:"droneIcon",applicationType:"deckCards",effects:[{cardId:"scrapDronesEvent",count:2}]},RESOURCE_SUPPLY_EVENT_DECK_REWARD:{id:"resourceSupplyEventDeckReward",name:"Resource Supply Event",description:"Add two Resource Supply Event cards to your deck. Increase the supply of steel and concrete by 5 each",image:"resourceSupplyIcon",applicationType:"deckCards",effects:[{cardId:"resourceSupplyEvent",count:2}]},BARTER_EVENT_DECK_REWARD:{id:"barterEventDeckReward",name:"Barter Event",description:"Add two Barter Event cards to your deck. Trade 10 concrete for 3 steel and 3 fuel",image:"barterIcon",applicationType:"deckCards",effects:[{cardId:"barterEvent",count:3}]},RAW_EXPORT_EVENT_DECK_REWARD:{id:"rawExportEventDeckReward",name:"Raw Export Event",description:"Add two Raw Export Event cards to your deck. Export 10 water for 5 fuel and 15 iron for 5 fuel",image:"rawExportIcon",applicationType:"deckCards",effects:[{cardId:"exportWaterEvent",count:2},{cardId:"exportIronEvent",count:2}]},ARTIFICIAL_LIGHTS_DECK_REWARD:{id:"artificialLightsDeckReward",name:"Artificial Lights",description:"Add 3 Artificial Lights cards to your deck - makes the area pretty and brings respect to the colony",image:"artificialLights",applicationType:"deckCards",effects:[{cardId:"artificialLightsCard",count:3}]},CHARITY_EVENT_DECK_REWARD:{id:"charityEventDeckReward",name:"Charity Event",description:"Add 4 Charity Event cards to your deck. Provide resources to another colony for 5 reputation",image:"charityIcon",applicationType:"deckCards",effects:[{cardId:"charityEvent",count:4}]}},BUILDING_UPGRADE_REWARDS:{DRON_SUPPORT:{id:"droneSupportReward",name:"Drone Support",description:"Any building adjacent to a Drone Depo has its production increased by 1",image:"mechIcon",applicationType:"buildingUpgrade",effects:[{buildingId:"any",adjacentBuildingId:"droneDepo",adjacentBuildingBonus:{any:1}}]},IMPROVED_ELECTRIC_GENERATION:{id:"improvedElectricGenerationReward",name:"Improved Electrics",description:"Wind Turbines produce 2 more energy. Solar panels produce +1 energy per each adjacent building",image:"improvedElectricGeneration",applicationType:"buildingUpgrade",effects:[{buildingId:"windTurbine",resourceBonus:{energy:2}},{buildingId:"solarPanel",adjacentBuildingId:"any",excludeBuildingTypes:["launchPadSurrounding","windTurbineSurrounding"],adjacencyBonus:{energy:1}}]},FUEL_COMPRESSOR:{id:"fuelCompressorReward",name:"Fuel Compressor",description:"Fuel Refineries produce 1 more fuel but require 2 more energy",image:"fuelPumpIcon",applicationType:"buildingUpgrade",effects:[{buildingId:"fuelRefinery",resourceBonus:{fuel:1},cardCost:{[T.ENERGY]:2}}]},EFFICIENT_SUPPLY_CHAIN:{id:"efficientSupplyChainReward",name:"Efficient Supply Chain",description:"Steelworks produce 1 more steel if adjacent to an Iron Mine. Fuel Refineries produce 1 more fuel if adjacent to a Water Pump.",image:"supplyChainIcon",applicationType:"buildingUpgrade",effects:[{buildingId:"steelworks",adjacentBuildingId:"ironMine",adjacencyBonus:{steel:1}},{buildingId:"fuelRefinery",adjacentBuildingId:"waterPump",adjacencyBonus:{fuel:1}}]},IMPROVED_LAUNCH_PAD:{id:"improvedLaunchPadReward",name:"Improved Launch Pad",description:"Launch Pads can now launch fast rockets - trip takes only 1 turn but requires +50% fuel",image:"rocketInFlight",applicationType:"buildingUpgrade",effects:[{buildingId:"launchPad",newAction:{name:"Fast Launch",cost:{[T.FUEL]:15,[T.STEEL]:10},cooldown:1,effects:[{type:"addResource",resource:T.REPUTATION,amount:10}]}}]},HEAVY_LAUNCH_PAD:{id:"heavyLaunchPadReward",name:"Heavy Launch",description:"Launch Pads can now launch heavy rockets - can carry +50% more steel but requires +100% more fuel",image:"rocketInFlight",applicationType:"buildingUpgrade",effects:[{buildingId:"launchPad",newAction:{name:"Heavy Launch",cost:{[T.FUEL]:20,[T.STEEL]:15},cooldown:2,effects:[{type:"addResource",resource:T.REPUTATION,amount:15}]}}]}}},L=["efficientSupplyChainReward","droneSupportReward"],k=[{id:"level1",name:"Brave New World",description:"Learn the basics of colony building",mapId:"TUTORIAL_MAP",turnLimit:20,reputationGoal:10,startingResources:{[T.IRON]:0,[T.STEEL]:30,[T.CONCRETE]:30,[T.WATER]:0,[T.FUEL]:0,[T.DRONES]:0,[T.ENERGY]:0,[T.REPUTATION]:0},rewards:{rewardIds:[O.STARTING_HAND_REWARDS.IRON_MINE_PREFAB_STARTING_REWARD.id,O.DECK_CARDS_REWARDS.RESOURCE_SUPPLY_EVENT_DECK_REWARD.id,O.BUILDING_UPGRADE_REWARDS.IMPROVED_ELECTRIC_GENERATION.id],resources:{}},nextLevelId:"level2"},{id:"level2",name:"First Steps",description:"Establish your first sustainable colony",mapId:"LEVEL_2_MAP",turnLimit:20,reputationGoal:20,startingResources:{[T.IRON]:0,[T.STEEL]:10,[T.CONCRETE]:15,[T.WATER]:0,[T.FUEL]:0,[T.DRONES]:0,[T.ENERGY]:0,[T.REPUTATION]:0},rewards:{rewardIds:[O.STARTING_HAND_REWARDS.STEELWORKS_PREFAB_STARTING_REWARD.id,O.DECK_CARDS_REWARDS.BARTER_EVENT_DECK_REWARD.id,O.BUILDING_UPGRADE_REWARDS.FUEL_COMPRESSOR.id],resources:{}},nextLevelId:"level3"},{id:"level3",name:"Expanding Horizons",description:"Grow your colony into a thriving settlement",mapId:"LEVEL_3_MAP",turnLimit:20,reputationGoal:30,startingResources:{[T.IRON]:0,[T.STEEL]:10,[T.CONCRETE]:15,[T.WATER]:0,[T.FUEL]:0,[T.DRONES]:0,[T.ENERGY]:0,[T.REPUTATION]:0},rewards:{rewardIds:[O.STARTING_HAND_REWARDS.TESLA_COIL_PREFAB_STARTING_REWARD.id,O.DECK_CARDS_REWARDS.RAW_EXPORT_EVENT_DECK_REWARD.id,O.BUILDING_UPGRADE_REWARDS.IMPROVED_LAUNCH_PAD.id],resources:{}},nextLevelId:"level4"},{id:"level4",name:"Rocky Road",description:"Develop a colony in a rocky environment",mapId:"LEVEL_4_MAP",turnLimit:20,reputationGoal:40,startingResources:{[T.IRON]:0,[T.STEEL]:10,[T.CONCRETE]:10,[T.WATER]:0,[T.FUEL]:0,[T.DRONES]:0,[T.ENERGY]:0,[T.REPUTATION]:0},rewards:{rewardIds:[O.DECK_CARDS_REWARDS.ARTIFICIAL_LIGHTS_DECK_REWARD.id,O.DECK_CARDS_REWARDS.CHARITY_EVENT_DECK_REWARD.id,O.BUILDING_UPGRADE_REWARDS.HEAVY_LAUNCH_PAD.id],resources:{}},nextLevelId:"level5"},{id:"level5",name:"Metropolis",description:"Build a massive colony on an open plain",mapId:"LEVEL_5_MAP",turnLimit:25,reputationGoal:90,startingResources:{[T.IRON]:0,[T.STEEL]:10,[T.CONCRETE]:10,[T.WATER]:0,[T.FUEL]:0,[T.DRONES]:0,[T.ENERGY]:0,[T.REPUTATION]:0},rewards:{rewardIds:[O.DECK_CARDS_REWARDS.DRONE_EVENT_DECK_REWARD.id],resources:{}},nextLevelId:null}],M={gridSize:8,cells:[{x:0,y:3,feature:I.METAL.id},{x:0,y:5,feature:I.METAL.id},{x:1,y:5,feature:I.METAL.id},{x:2,y:4,feature:I.METAL.id},{x:2,y:7,feature:I.METAL.id},{x:3,y:5,feature:I.METAL.id},{x:6,y:0,feature:I.METAL.id},{x:6,y:1,feature:I.METAL.id},{x:6,y:6,feature:I.METAL.id},{x:7,y:0,feature:I.METAL.id},{x:7,y:5,feature:I.METAL.id},{x:7,y:7,feature:I.METAL.id},{x:0,y:0,feature:I.WATER.id},{x:1,y:7,feature:I.WATER.id},{x:2,y:1,feature:I.WATER.id},{x:2,y:6,feature:I.WATER.id},{x:4,y:0,feature:I.WATER.id},{x:5,y:4,feature:I.WATER.id},{x:7,y:2,feature:I.WATER.id},{x:0,y:2,feature:I.MOUNTAIN.id},{x:0,y:6,feature:I.MOUNTAIN.id},{x:2,y:0,feature:I.MOUNTAIN.id},{x:5,y:7,feature:I.MOUNTAIN.id}]},N={gridSize:8,cells:[{x:0,y:5,feature:I.METAL.id},{x:1,y:5,feature:I.METAL.id},{x:1,y:6,feature:I.METAL.id},{x:2,y:6,feature:I.METAL.id},{x:6,y:0,feature:I.METAL.id},{x:7,y:0,feature:I.METAL.id},{x:6,y:4,feature:I.METAL.id},{x:0,y:0,feature:I.WATER.id},{x:5,y:7,feature:I.WATER.id},{x:2,y:0,feature:I.MOUNTAIN.id},{x:3,y:1,feature:I.MOUNTAIN.id},{x:4,y:1,feature:I.MOUNTAIN.id},{x:1,y:2,feature:I.MOUNTAIN.id},{x:5,y:2,feature:I.MOUNTAIN.id},{x:4,y:4,feature:I.MOUNTAIN.id},{x:0,y:6,feature:I.MOUNTAIN.id},{x:1,y:7,feature:I.MOUNTAIN.id},{x:7,y:7,feature:I.MOUNTAIN.id},{x:7,y:6,feature:I.MOUNTAIN.id}]},v={gridSize:8,cells:[{x:2,y:1,feature:I.METAL.id},{x:2,y:0,feature:I.METAL.id},{x:7,y:0,feature:I.METAL.id},{x:3,y:4,feature:I.WATER.id},{x:4,y:4,feature:I.WATER.id},{x:6,y:0,feature:I.MOUNTAIN.id},{x:7,y:1,feature:I.MOUNTAIN.id},{x:0,y:1,feature:I.MOUNTAIN.id},{x:0,y:3,feature:I.MOUNTAIN.id},{x:1,y:0,feature:I.MOUNTAIN.id},{x:1,y:1,feature:I.MOUNTAIN.id},{x:1,y:2,feature:I.MOUNTAIN.id},{x:2,y:2,feature:I.MOUNTAIN.id},{x:3,y:1,feature:I.MOUNTAIN.id},{x:4,y:1,feature:I.MOUNTAIN.id},{x:5,y:0,feature:I.MOUNTAIN.id},{x:3,y:1,feature:I.MOUNTAIN.id},{x:4,y:3,feature:I.MOUNTAIN.id},{x:2,y:4,feature:I.MOUNTAIN.id},{x:5,y:5,feature:I.MOUNTAIN.id}]},P={gridSize:8,cells:[{x:2,y:6,feature:I.METAL.id},{x:1,y:5,feature:I.METAL.id},{x:7,y:7,feature:I.METAL.id},{x:6,y:0,feature:I.METAL.id},{x:2,y:2,feature:I.METAL.id},{x:3,y:2,feature:I.METAL.id},{x:3,y:1,feature:I.METAL.id},{x:1,y:6,feature:I.WATER.id},{x:6,y:5,feature:I.WATER.id},{x:7,y:2,feature:I.WATER.id},{x:2,y:5,feature:I.MOUNTAIN.id},{x:3,y:6,feature:I.MOUNTAIN.id},{x:2,y:7,feature:I.MOUNTAIN.id},{x:0,y:0,feature:I.MOUNTAIN.id},{x:0,y:3,feature:I.MOUNTAIN.id},{x:0,y:5,feature:I.MOUNTAIN.id},{x:0,y:7,feature:I.MOUNTAIN.id},{x:3,y:7,feature:I.MOUNTAIN.id},{x:4,y:7,feature:I.MOUNTAIN.id},{x:2,y:4,feature:I.MOUNTAIN.id},{x:1,y:3,feature:I.MOUNTAIN.id},{x:6,y:6,feature:I.MOUNTAIN.id},{x:6,y:7,feature:I.MOUNTAIN.id},{x:5,y:6,feature:I.MOUNTAIN.id},{x:7,y:5,feature:I.MOUNTAIN.id},{x:4,y:4,feature:I.MOUNTAIN.id},{x:4,y:5,feature:I.MOUNTAIN.id},{x:5,y:3,feature:I.MOUNTAIN.id},{x:6,y:3,feature:I.MOUNTAIN.id},{x:6,y:4,feature:I.MOUNTAIN.id},{x:5,y:0,feature:I.MOUNTAIN.id},{x:7,y:3,feature:I.MOUNTAIN.id},{x:7,y:1,feature:I.MOUNTAIN.id},{x:7,y:0,feature:I.MOUNTAIN.id},{x:5,y:2,feature:I.MOUNTAIN.id},{x:2,y:0,feature:I.MOUNTAIN.id},{x:1,y:1,feature:I.MOUNTAIN.id},{x:0,y:2,feature:I.MOUNTAIN.id},{x:1,y:2,feature:I.MOUNTAIN.id},{x:3,y:0,feature:I.MOUNTAIN.id}]},D={gridSize:8,cells:[{x:3,y:4,feature:I.METAL.id},{x:4,y:3,feature:I.METAL.id},{x:4,y:4,feature:I.METAL.id},{x:5,y:3,feature:I.METAL.id},{x:5,y:5,feature:I.METAL.id},{x:6,y:0,feature:I.METAL.id},{x:6,y:3,feature:I.METAL.id},{x:6,y:6,feature:I.METAL.id},{x:7,y:4,feature:I.METAL.id},{x:7,y:5,feature:I.METAL.id},{x:0,y:6,feature:I.WATER.id},{x:4,y:5,feature:I.WATER.id},{x:6,y:4,feature:I.WATER.id},{x:0,y:0,feature:I.MOUNTAIN.id},{x:2,y:2,feature:I.MOUNTAIN.id},{x:3,y:0,feature:I.MOUNTAIN.id},{x:3,y:5,feature:I.MOUNTAIN.id},{x:4,y:7,feature:I.MOUNTAIN.id},{x:7,y:0,feature:I.MOUNTAIN.id}]};const _=new class{constructor(){this.LEVEL_PROGRESS={completedLevels:{},unlockedLevels:["level1"],currentLevelId:"level1",persistentRewards:{rewardIds:[],resourceBonuses:{}}},this.availableMaps={};for(const e in n)if("__esModule"!==e){const t=e;this.availableMaps[t]=n[e]}}getCurrentLevel(){const e=this.LEVEL_PROGRESS.currentLevelId;return e.startsWith("random_")&&this.LEVEL_PROGRESS.customLevel?this.LEVEL_PROGRESS.customLevel:k.find((t=>t.id===e))}getMapForCurrentLevel(){const e=this.getCurrentLevel();if(!e)return null;if(e.isRandom&&e.customMap)return e.customMap;const t=e.mapId,i=this.availableMaps[t];return i||(console.warn(`Map with ID "${t}" not found. Using default map.`),this.availableMaps.TUTORIAL_MAP)}advanceToNextLevel(){const e=this.getCurrentLevel();return e&&e.isRandom?(this.LEVEL_PROGRESS.completedLevels[e.id]=!0,this.LEVEL_PROGRESS.randomLevelsCompleted?this.LEVEL_PROGRESS.randomLevelsCompleted++:this.LEVEL_PROGRESS.randomLevelsCompleted=1,!0):!(!e||!e.nextLevelId)&&(this.LEVEL_PROGRESS.completedLevels[e.id]=!0,this.LEVEL_PROGRESS.unlockedLevels.push(e.nextLevelId),this.LEVEL_PROGRESS.currentLevelId=e.nextLevelId,!0)}generateRandomLevel(){const e=this.LEVEL_PROGRESS.randomLevelsCompleted||0,t="random_"+Date.now(),i=35+15*e,n=18+2*e,s=Math.max(2,Math.floor(6-.25*e)),r=Math.max(4,Math.floor(12-e)),a=3+2*e,o=this.generateRandomMap(8,r,s,a),d=["Olympus Mons","Valles Marineris","Syrtis Major","Hellas Basin","Arsia Mons","Elysium Planitia","Tharsis Ridge","Utopia Planitia","Meridiani Planum","Arcadia Planitia","Terra Cimmeria","Amazonis Planitia"],c=["Outpost","Settlement","Mining Colony","Research Base","Habitat Dome","Supply Depot","Frontier Base","Command Center"],l={id:t,name:`${d[Math.floor(Math.random()*d.length)]} ${c[Math.floor(Math.random()*c.length)]}`,description:`Challenge level: ${e+1}`,mapId:null,customMap:o,turnLimit:n,reputationGoal:i,startingResources:{[T.IRON]:0,[T.STEEL]:10,[T.CONCRETE]:15,[T.WATER]:0,[T.FUEL]:0,[T.DRONES]:0,[T.ENERGY]:0,[T.REPUTATION]:0},rewards:{rewardIds:[],resources:{}},nextLevelId:null,isRandom:!0};return this.LEVEL_PROGRESS.currentLevelId=t,this.LEVEL_PROGRESS.customLevel=l,this.LEVEL_PROGRESS.randomLevelsCompleted||(this.LEVEL_PROGRESS.randomLevelsCompleted=0),this.saveLevelProgress(),l}generateRandomMap(e,t,i,n){const s={gridSize:e,cells:[]},r=(e,t)=>s.cells.some((i=>i.x===e&&i.y===t)),a=(t,i)=>{let n=0,a=0;for(;n<i&&a<100;){const i=Math.floor(Math.random()*e),o=Math.floor(Math.random()*e);r(i,o)||(s.cells.push({x:i,y:o,feature:t}),n++),a++}return n};return a(I.WATER.id,i),a(I.METAL.id,t),a(I.MOUNTAIN.id,n),s}getAvailableRewards(){const e=Object.keys(this.LEVEL_PROGRESS.completedLevels);if(0===e.length)return null;const t=e.find((e=>{const t=k.find((t=>t.id===e));return t&&t.nextLevelId===this.LEVEL_PROGRESS.currentLevelId}));if(!t)return null;const i=k.find((e=>e.id===t));return i?i.rewards:null}getStartingResourcesForCurrentLevel(){const e=this.getCurrentLevel();if(!e)return null;return{...e.startingResources}}getCurrentVictoryGoal(){return this.getCurrentLevel().reputationGoal}getCurrentTurnLimit(){return this.getCurrentLevel().turnLimit}isRewardPersistentlyUnlocked(e){return this.LEVEL_PROGRESS.persistentRewards.rewardIds.includes(e)}saveLevelProgress(){localStorage.setItem("levelProgress",JSON.stringify(this.LEVEL_PROGRESS))}loadLevelProgress(){const e=localStorage.getItem("levelProgress");return!!e&&(Object.assign(this.LEVEL_PROGRESS,JSON.parse(e)),!0)}},B=()=>{window.dataLayer=window.dataLayer||[]},F=(e,t={})=>{window.dataLayer||B(),window.dataLayer.push({event:e,...t})};class U extends r().Scene{constructor(){super("BootScene")}preload(){this.createLoadingBar(),this.load.image("terrainPlain1",i(1673)),this.load.image("terrainPlain2",i(5586)),this.load.image("ironDeposit1",i(8338)),this.load.image("ironDeposit2",i(1025)),this.load.image("ironDeposit3",i(7339)),this.load.image("waterDeposit",i(5830)),this.load.image("mountainTile1",i(267)),this.load.image("mountainTile2",i(356)),this.load.image("concreteMixer",i(6905)),this.load.image("droneDepo",i(1150)),this.load.image("fuelRefinery",i(3646)),this.load.image("ironMine",i(6935)),this.load.image("launchPad",i(8883)),this.load.image("launchPadIcon",i(9345)),this.load.image("launchPadSurrounding",i(8883)),this.load.image("solarPanel",i(1361)),this.load.image("steelworks",i(2704)),this.load.image("waterPump",i(778)),this.load.image("teslaCoil",i(4005)),this.load.image("windTurbine",i(5713)),this.load.image("windTurbineSurrounding",i(187)),this.load.image("artificialLights",i(232)),this.load.image("droneIcon",i(1031)),this.load.image("resourceSupplyIcon",i(2993)),this.load.image("barterIcon",i(2266)),this.load.image("supplyChainIcon",i(5148)),this.load.image("waterIcon",i(8029)),this.load.image("ironIcon",i(4332)),this.load.image("rawExportIcon",i(1485)),this.load.image("charityIcon",i(3113)),this.load.image("fuelPumpIcon",i(9495)),this.load.image("mechIcon",i(3315)),this.load.image("improvedElectricGeneration",i(5899)),this.load.image("illegalTileShade",i(4633)),this.load.image("rocketUnFueled",i(6973)),this.load.image("rocketFueled",i(292)),this.load.image("rocketInFlight",i(378)),this.load.image("cardBackground",i(8531)),this.load.image("cardPrefabBackground",i(6211)),this.load.image("cardEventBackground",i(2546)),this.load.image("cardSlotBackground",i(1484)),this.load.image("handLimitIndicator",i(6466)),this.load.image("blueGlossSquareButton",i(1979)),this.load.image("blueSquareButton",i(2216)),this.load.image("greenSquareButton",i(6625)),this.load.image("redSquareButton",i(2369)),this.load.image("greySquareButton",i(2849)),this.load.image("discardButton",i(2170)),this.load.image("victoryPanelBackground",i(4960)),this.load.image("panelGlassScrews",i(1922)),this.load.image("barRoundLargeSquare",i(6743)),this.load.image("tutorialPanel",i(3614)),this.load.image("tutorialPanel2",i(1086)),this.load.image("particleGlow",i(6743))}create(){!_.loadLevelProgress()?(_.LEVEL_PROGRESS.currentLevelId="level1",_.saveLevelProgress(),F("game_first_open"),this.scene.start("GameScene")):this.scene.start("LevelSelectScene")}createLoadingBar(){const e=this.cameras.main.width,t=this.cameras.main.height,i=this.add.graphics(),n=this.add.graphics();n.fillStyle(2236962,.8),n.fillRect(e/2-160,t/2-25,320,50);const s=this.make.text({x:e/2,y:t/2-50,text:"Loading...",style:{font:"20px monospace",fill:"#ffffff"}});s.setOrigin(.5,.5),this.load.on("progress",(n=>{i.clear(),i.fillStyle(16777215,1),i.fillRect(e/2-150,t/2-15,300*n,30)})),this.load.on("complete",(()=>{i.destroy(),n.destroy(),s.destroy()}))}}class G{constructor(e){this.scene=e,this.rocketInFlight={}}getBuildingActions(e){if(!Object.values(x).find((t=>t.id===e)))return[];let t=[];const i=Object.values(A).find((t=>t.buildingId===e));if(i&&i.effects&&(t=[...t,...i.effects.filter((e=>"action"===e.type))]),this.scene.rewardsManager){const i=this.scene.rewardsManager.getBuildingActions(e);i.length>0&&(t=[...t,...i])}return t}isActionOnCooldown(e,t,i){const n=`${e},${t}`;if("launchRocket"===i||"FastLaunch"===i||"HeavyLaunch"===i){const i=this.scene.gridManager.getCell(e,t);return i&&i.hasRocket&&this.rocketInFlight[n]&&(console.warn("isActionOnCooldown: Found inconsistent rocket state for",n),console.warn("isActionOnCooldown: cell has rocket ? ",i.hasRocket),console.warn("isActionOnCooldown: rocketInFlight state ? ",this.rocketInFlight[n]),console.warn("isActionOnCooldown: cell: ",i)),!0===this.rocketInFlight[n]}return!1}getActionCooldown(e,t,i){if("launchRocket"===i||"FastLaunch"===i||"HeavyLaunch"===i){const i=`${e},${t}`;if(this.rocketInFlight[i]){const i=this.scene.gridManager.rocketsInFlight;for(const n of i)if(n.x===e&&n.y===t)return n.returnsAtTurn-this.scene.currentTurn;return 1}}return 0}performAction(e,t,i){if(!i||"action"!==i.type)return!1;if(this.isActionOnCooldown(e,t,i.action)){const n=this.getActionCooldown(e,t,i.action),s="FastLaunch"===i.action||"launchRocket"===i.action||"HeavyLaunch"===i.action?`Rocket in flight. Returns in ${n} turn${n>1?"s":""}.`:`Action is on cooldown for ${n} more turns`;return this.scene.uiScene.showMessage(s),!1}if(!this.scene.resourceManager.hasSufficientResources(i.cost))return this.scene.uiScene.showMessage("Not enough resources for this action"),!1;if("launchRocket"===i.action||"FastLaunch"===i.action||"HeavyLaunch"===i.action){const n=`${e},${t}`;this.rocketInFlight[n]=!0,this.scene.gridManager.launchRocket(e,t,i.cooldown);let s="regular";"FastLaunch"===i.action?s="fast":"HeavyLaunch"===i.action&&(s="heavy"),this.scene.animateRocketLaunch(e,t,s)}for(const e in i.cost)this.scene.resourceManager.modifyResource(e,-i.cost[e]);for(const e of i.effects||[])"addResource"===e.type&&this.scene.resourceManager.modifyResource(e.resource,e.amount);return this.scene.uiScene.showMessage(`${i.name} action executed!`),this.scene.uiScene.refreshUI(),!0}clearRocketInFlight(e,t){const i=`${e},${t}`;delete this.rocketInFlight[i]}}class W{constructor(e){this.scene=e,this.deck=[],this.hand=[],this.discardPile=[],this.initializeDeck(),this.shuffleDeck()}initializeDeck(){if(this.deck=[],Object.entries(b).forEach((([e,t])=>{this.addCardToDeck(e,t)})),this.scene.rewardsManager){const e=this.scene.rewardsManager.getDeckRewardCards();Object.entries(e).forEach((([e,t])=>{this.addCardToDeck(e,t)}))}0===this.deck.length&&(console.warn("Deck composition is empty or invalid. Using default deck."),this.createDefaultDeck())}findRewardById(e){const t=[O.STARTING_HAND_REWARDS,O.DECK_CARDS_REWARDS,O.BUILDING_UPGRADE_REWARDS];for(const i of t)for(const t in i)if(i[t].id===e)return i[t];return null}addCardToDeck(e,t){const i=Object.values(A).find((t=>t.id===e));if(!i)return void console.warn(`Card type ${e} not found in CARD_TYPES configuration.`);const n="event"===i.cardType?"event":"building";for(let e=0;e<t;e++){const e={type:n,cardType:i};"building"===n&&i.buildingId&&(e.building=Object.values(x).find((e=>e.id===i.buildingId))),this.deck.push(e)}}createDefaultDeck(){Object.values(A).forEach((e=>{const t="event"===e.cardType?"event":"building",i={type:t,cardType:e};"building"===t&&e.buildingId&&(i.building=Object.values(x).find((t=>t.id===e.buildingId))),this.deck.push(i)}))}shuffleDeck(){for(let e=this.deck.length-1;e>0;e--){const t=Math.floor(Math.random()*(e+1));[this.deck[e],this.deck[t]]=[this.deck[t],this.deck[e]]}}shuffleDiscardIntoDeck(){this.deck=[...this.discardPile],this.discardPile=[],this.shuffleDeck()}drawCards(e=1){const t=[];for(let i=0;i<e;i++){if(0===this.deck.length){if(0===this.discardPile.length)break;this.deck=[...this.discardPile],this.discardPile=[],this.shuffleDeck()}if(this.hand.length>=8)break;const e=this.deck.pop();this.hand.push(e),t.push(e)}return t}setupStartingHand(){this.hand=[];const e=[];if(Object.entries(w).forEach((([t,i])=>{i&&this.addCardToStartingCards(t,e)})),this.scene.rewardsManager){this.scene.rewardsManager.getStartingHandRewardCards().forEach((t=>{this.addCardToStartingCards(t,e)}))}e.forEach((e=>{this.hand.push(e)})),this.drawCards(4-e.length)}addCardToStartingCards(e,t){const i=Object.values(A).find((t=>t.id===e));if(i){const e="event"===i.cardType?"event":"building",n={type:e,cardType:i};"building"===e&&i.buildingId&&(n.building=Object.values(x).find((e=>e.id===i.buildingId))),t.push(n)}}discardCard(e){if(e<0||e>=this.hand.length)return null;const[t]=this.hand.splice(e,1);return this.discardPile.push(t),t}playCard(e){if(e<0||e>=this.hand.length)return null;const[t]=this.hand.splice(e,1);return t}getCardFromHand(e){return e<0||e>=this.hand.length?null:this.hand[e]}getHand(){return[...this.hand]}getCardCounts(){return{deck:this.deck.length,hand:this.hand.length,discardPile:this.discardPile.length}}}class V{constructor(e){this.scene=e,this.gridSize=8,this.cellSize=C,this.grid=[],this.rocketsInFlight=[],this.initializeGrid()}initializeGrid(){this.grid=[];for(let e=0;e<this.gridSize;e++){const t=[];for(let i=0;i<this.gridSize;i++)t.push({x:i,y:e,terrain:m.PLAIN.id,feature:null,building:null,terrainSprite:null,featureSprite:null,buildingSprite:null,rocketSprite:null,hasRocket:!1,rocketState:null,justLanded:!1});this.grid.push(t)}}loadMapConfig(e){e.gridSize&&(this.gridSize=e.gridSize,this.initializeGrid()),e.cells&&Array.isArray(e.cells)&&e.cells.forEach((e=>{e.x>=0&&e.x<this.gridSize&&e.y>=0&&e.y<this.gridSize&&(e.terrain&&(this.grid[e.y][e.x].terrain=e.terrain),e.feature&&(this.grid[e.y][e.x].feature=e.feature),e.building&&(this.grid[e.y][e.x].building=e.building))}))}getCell(e,t){return e>=0&&e<this.gridSize&&t>=0&&t<this.gridSize?this.grid[t][e]:null}canPlaceBuilding(e,t,i){const n=this.getCell(e,t);if(!n)return!1;if(n.building)return!1;if(i.terrainRequirement){if(!n.feature)return!1;if(n.feature!==i.terrainRequirement)return!1}if(n.feature===I.MOUNTAIN.id)return!1;if("launchPad"===i.id||"windTurbine"===i.id){const i=this.getAdjacentCells(e,t);if(i.length<4)return!1;for(const e of i)if(e.feature===I.MOUNTAIN.id||e.building)return!1}return!0}getAdjacentCells(e,t){const i=[{dx:0,dy:-1},{dx:1,dy:0},{dx:0,dy:1},{dx:-1,dy:0}],n=[];for(const s of i){const i=e+s.dx,r=t+s.dy,a=this.getCell(i,r);a&&n.push(a)}return n}isAdjacentToBuildingType(e,t,i){return this.getAdjacentCells(e,t).some((e=>e.building===i))}placeBuilding(e,t,i){return!!this.canPlaceBuilding(e,t,i)&&(this.grid[t][e].feature=null,this.grid[t][e].featureSprite&&(this.grid[t][e].featureSprite.destroy(),this.grid[t][e].featureSprite=null),this.grid[t][e].building=i.id,"launchPad"===i.id&&(this.grid[t][e].hasRocket=!0,this.updateRocketState(e,t)),!0)}updateRocketState(e,t){const i=this.getCell(e,t);i&&"launchPad"===i.building&&i.hasRocket&&(this.scene.resourceManager.hasSufficientResources(this.scene.launchCost)?i.rocketState="fueled":i.rocketState="unfueled")}launchRocket(e,t,i=2){const n=this.getCell(e,t);if(!n||"launchPad"!==n.building||!n.hasRocket||"fueled"!==n.rocketState)return!1;let s=i-1;return this.rocketsInFlight.push({x:e,y:t,returnsAtTurn:this.scene.currentTurn+s}),n.hasRocket=!1,n.rocketState=null,!0}processRocketReturns(){const e=[];for(let t=0;t<this.rocketsInFlight.length;t++)this.rocketsInFlight[t].returnsAtTurn===this.scene.currentTurn&&(e.push(this.rocketsInFlight[t]),this.rocketsInFlight.splice(t,1),t--);for(const t of e){const e=this.getCell(t.x,t.y);e&&"launchPad"===e.building&&(e.hasRocket=!0,e.justLanded=!0,this.updateRocketState(t.x,t.y),this.scene.buildingActionManager&&this.scene.buildingActionManager.clearRocketInFlight(t.x,t.y))}return e.length}getLaunchReadyPads(){const e=[];for(let t=0;t<this.gridSize;t++)for(let i=0;i<this.gridSize;i++){const n=this.grid[t][i];"launchPad"===n.building&&n.hasRocket&&"fueled"===n.rocketState&&e.push({x:i,y:t})}return e}removeBuilding(e,t){const i=this.getCell(e,t);return!(!i||!i.building)&&(i.building=null,i.buildingSprite&&(i.buildingSprite.destroy(),i.buildingSprite=null),!0)}getAllBuildings(){const e=[];for(let t=0;t<this.gridSize;t++)for(let i=0;i<this.gridSize;i++)this.grid[t][i].building&&e.push({x:i,y:t,buildingId:this.grid[t][i].building});return e}generateRandomMap(e=15,t=5,i=10){this.initializeGrid();const n=this.gridSize*this.gridSize,s=Math.floor(n*(e/100)),r=Math.floor(n*(t/100)),a=Math.floor(n*(i/100)),o=(e,t)=>{let i=0;for(;i<t;){const t=Math.floor(Math.random()*this.gridSize),n=Math.floor(Math.random()*this.gridSize);this.grid[n][t].feature||(this.grid[n][t].feature=e,i++)}};o(I.METAL.id,s),o(I.WATER.id,r),o(I.MOUNTAIN.id,a)}}class z{constructor(e){this.scene=e;const t=_.getStartingResourcesForCurrentLevel();this.resources=t,this.applyTestingModeResources(),this.nonAccumulatingResources=[],this.onResourceChange=null,this.resourceChangeListeners={},this.victoryCheckEnabled=!0}applyTestingModeResources(){_.LEVEL_PROGRESS.testingMode&&(this.resources[T.DRONES]=(this.resources[T.DRONES]||0)+100,this.resources[T.ENERGY]=(this.resources[T.ENERGY]||0)+100,this.resources[T.CONCRETE]=(this.resources[T.CONCRETE]||0)+100,this.resources[T.IRON]=(this.resources[T.IRON]||0)+100,this.resources[T.WATER]=(this.resources[T.WATER]||0)+100,this.resources[T.STEEL]=(this.resources[T.STEEL]||0)+100,this.resources[T.FUEL]=(this.resources[T.FUEL]||0)+100)}addResourceChangeListener(e,t){this.resourceChangeListeners[e]||(this.resourceChangeListeners[e]=[]),this.resourceChangeListeners[e].push(t)}removeResourceChangeListener(e,t){if(!this.resourceChangeListeners[e])return;const i=this.resourceChangeListeners[e].indexOf(t);-1!==i&&this.resourceChangeListeners[e].splice(i,1)}getResource(e){return this.resources[e]||0}modifyResource(e,t){if(!this.resources.hasOwnProperty(e))return console.warn(`Resource type ${e} not found`),!1;if(this.resources[e]+t<0)return console.warn(`Not enough ${e} resources`),!1;const i=this.resources[e];this.resources[e]+=t;const n=this.resources[e];return this.onResourceChange&&this.onResourceChange(e,n),this.resourceChangeListeners[e]&&this.resourceChangeListeners[e].length>0&&this.resourceChangeListeners[e].forEach((t=>{t(e,i,n)})),e===T.REPUTATION&&this.victoryCheckEnabled&&this.checkVictoryCondition(),!0}addResource(e,t){return t<0?(console.warn("Cannot add negative resources. Use spendResource instead."),!1):this.modifyResource(e,t)}spendResource(e,t){return t<0?(console.warn("Cannot spend negative resources. Use addResource instead."),!1):this.modifyResource(e,-t)}checkVictoryCondition(){if(!this.victoryCheckEnabled)return;const e=_.getCurrentVictoryGoal();this.resources[T.REPUTATION]>=e&&this.scene.playerVictory()}hasSufficientResources(e){for(const t in e)if(this.getResource(t)<e[t])return!1;return!0}consumeResources(e){if(!this.hasSufficientResources(e))return!1;for(const t in e)this.spendResource(t,e[t]);return!0}resetNonAccumulatingResources(){this.nonAccumulatingResources.forEach((e=>{this.resources[e]=0,this.onResourceChange&&this.onResourceChange(e,0)}))}getAllResources(){return{...this.resources}}setVictoryCheckEnabled(e){this.victoryCheckEnabled=e}}class H{constructor(e){this.scene=e,this.unlockedRewards={startingHand:[],deckCards:[],buildingUpgrade:[]},this.loadUnlockedRewardsFromLevelManager(),this.loadStartingRewards()}loadUnlockedRewardsFromLevelManager(){if(_&&_.LEVEL_PROGRESS&&_.LEVEL_PROGRESS.persistentRewards){const e=_.LEVEL_PROGRESS.persistentRewards.rewardIds||[];this.unlockedRewards={startingHand:[],deckCards:[],buildingUpgrade:[]},e.forEach((e=>{const t=this.findRewardById(e);if(!t)return void console.warn(`Reward ${e} not found in rewards configuration during loading`);let i=!1;if(t.applicationType)switch(t.applicationType){case"startingHand":this.unlockedRewards.startingHand.push(e),i=!0;break;case"deckCards":this.unlockedRewards.deckCards.push(e),i=!0;break;case"buildingUpgrade":this.unlockedRewards.buildingUpgrade.push(e),i=!0}if(!i&&t.effects)for(const n of t.effects)i||!n.cardId||n.count?!i&&n.cardId&&n.count?(this.unlockedRewards.deckCards.push(e),i=!0):!i&&n.buildingId&&n.resourceBonus&&(this.unlockedRewards.buildingUpgrade.push(e),i=!0):(this.unlockedRewards.startingHand.push(e),i=!0);i||(console.warn(`Reward ${e} could not be categorized, defaulting to startingHand`),this.unlockedRewards.startingHand.push(e))})),_.LEVEL_PROGRESS.persistentRewards.resourceBonuses&&(this.resourceBonuses={..._.LEVEL_PROGRESS.persistentRewards.resourceBonuses})}}loadStartingRewards(){_.LEVEL_PROGRESS.persistentRewards&&_.LEVEL_PROGRESS.persistentRewards.rewardIds&&_.LEVEL_PROGRESS.persistentRewards.rewardIds.length>0||(L.forEach((e=>{this.findRewardById(e)?this.addRewardById(e):console.warn(`Starting reward with ID ${e} not found in rewards configuration`)})),this.saveRewardsToLevelManager())}addRewardById(e){const t=this.findRewardById(e);if(!t)return console.warn(`Reward ${e} not found in rewards configuration`),!1;if(this.isRewardUnlocked(e))return!1;let i=!1;if(t.applicationType)switch(t.applicationType){case"startingHand":this.unlockedRewards.startingHand.push(e),i=!0;break;case"deckCards":this.unlockedRewards.deckCards.push(e),i=!0;break;case"buildingUpgrade":this.unlockedRewards.buildingUpgrade.push(e),i=!0;break;default:console.error(`Unknown application type: ${t.applicationType}`)}if(t.effects)for(const n of t.effects)!n.cardId||n.count||this.unlockedRewards.startingHand.includes(e)||(this.unlockedRewards.startingHand.push(e),i=!0),n.cardId&&n.count&&!this.unlockedRewards.deckCards.includes(e)&&(this.unlockedRewards.deckCards.push(e),i=!0),n.buildingId&&n.resourceBonus&&!this.unlockedRewards.buildingUpgrade.includes(e)&&(this.unlockedRewards.buildingUpgrade.push(e),i=!0);return i}saveRewardsToLevelManager(){_.LEVEL_PROGRESS.persistentRewards||(_.LEVEL_PROGRESS.persistentRewards={rewardIds:[],resourceBonuses:{}});const e=_.LEVEL_PROGRESS.persistentRewards.rewardIds||[],t=new Set(e),i=[...this.unlockedRewards.startingHand,...this.unlockedRewards.deckCards,...this.unlockedRewards.buildingUpgrade].filter((e=>!t.has(e)));_.LEVEL_PROGRESS.persistentRewards.rewardIds=[...e,...i],_.saveLevelProgress()}addLevelRewards(e){if(e){if(e.rewardIds&&e.rewardIds.length>0)for(let t=0;t<e.rewardIds.length;t++){const i=e.rewardIds[t];this.addRewardById(i)}this.saveRewardsToLevelManager()}}getAllRewards(){return O}getUnlockedRewards(){return this.unlockedRewards}isRewardUnlocked(e){return this.unlockedRewards.startingHand.includes(e)||this.unlockedRewards.deckCards.includes(e)||this.unlockedRewards.buildingUpgrade.includes(e)}findRewardById(e){const t=[O.STARTING_HAND_REWARDS,O.DECK_CARDS_REWARDS,O.BUILDING_UPGRADE_REWARDS];for(const i of t)for(const t in i)if(i[t].id===e)return i[t];return null}unlockReward(e){if(!this.findRewardById(e))return console.error(`Reward with ID ${e} not found`),!1;if(this.isRewardUnlocked(e))return!1;return!!this.addRewardById(e)&&(this.saveRewardsToLevelManager(),!0)}getStartingHandRewardCards(){const e=[];for(const t of this.unlockedRewards.startingHand){const i=this.findRewardById(t);if(i&&i.effects)for(const t of i.effects)t.cardId&&e.push(t.cardId)}return e}getDeckRewardCards(){const e={};for(const t of this.unlockedRewards.deckCards){const i=this.findRewardById(t);if(i&&i.effects)for(const t of i.effects)if(t.cardId){const i=t.cardId,n=t.count||1;e[i]?e[i]+=n:e[i]=n}}return e}applyBuildingUpgrades(e,t,i,n){const s={...t};for(const t of this.unlockedRewards.buildingUpgrade){const r=this.findRewardById(t);if(r&&r.effects)for(const t of r.effects){if((t.buildingId===e||"any"===t.buildingId)&&t.resourceBonus)for(const e in t.resourceBonus){const i=t.resourceBonus[e];s[e]?s[e]+=i:s[e]=i}if((t.buildingId===e||"any"===t.buildingId)&&t.adjacencyBonus&&void 0!==i&&void 0!==n)if("solarPanel"===e&&"any"===t.adjacentBuildingId){const e=this.scene.gridManager.getAdjacentCells(i,n);let r=0;for(const i of e)i.building&&(t.excludeBuildingTypes&&t.excludeBuildingTypes.includes(i.building)||r++);if(r>0)for(const e in t.adjacencyBonus){const i=t.adjacencyBonus[e]*r;s[e]?s[e]+=i:s[e]=i}}else{let e=!1;if("any"===t.adjacentBuildingId){e=this.scene.gridManager.getAdjacentCells(i,n).some((e=>!!e.building&&(!t.excludeBuildingTypes||!t.excludeBuildingTypes.includes(e.building))))}else e=this.scene.gridManager.isAdjacentToBuildingType(i,n,t.adjacentBuildingId);if(e)for(const e in t.adjacencyBonus){const i=t.adjacencyBonus[e];s[e]?s[e]+=i:s[e]=i}}if((t.buildingId===e||"any"===t.buildingId)&&t.adjacentBuildingBonus&&void 0!==i&&void 0!==n){if(this.scene.gridManager.isAdjacentToBuildingType(i,n,t.adjacentBuildingId))for(const e in t.adjacentBuildingBonus){const i=t.adjacentBuildingBonus[e];"any"===e?Object.keys(s).forEach((e=>{"energy"!==e&&"drones"!==e&&"reputation"!==e&&(s[e]+=i)})):s[e]?s[e]+=i:s[e]=i}}}}return s}getBuildingActions(e){const t=[];for(const i of this.unlockedRewards.buildingUpgrade){const n=this.findRewardById(i);if(n&&n.effects)for(const i of n.effects)if(i.buildingId===e&&i.newAction){const e={type:"action",action:`${i.newAction.name.replace(/\s+/g,"")}`,name:i.newAction.name,cost:i.newAction.cost,cooldown:i.newAction.cooldown,effects:i.newAction.effects};t.push(e)}}return t}getCardCostAdjustments(e){const t={};for(const i of this.unlockedRewards.buildingUpgrade){const n=this.findRewardById(i);if(n&&n.effects)for(const i of n.effects)if(i.buildingId===e&&i.cardCost)for(const e in i.cardCost){const n=i.cardCost[e];t[e]?t[e]+=n:t[e]=n}}return t}}class $ extends r().Scene{constructor(){super("GameScene"),this.selectedCard=null,this.currentTurn=1,this.illegalTileSprites=[],this.developerMode=!1,this.coordinateTexts=[]}init(){var e;this.gridManager=new V(this),this.resourceManager=new z(this),this.rewardsManager=new H(this),this.cardManager=new W(this),this.buildingActionManager=new G(this),this.resourceManager.setVictoryCheckEnabled(!0),this.currentLevel=_.getCurrentLevel(),this.currentLevel&&(e=this.currentLevel.id,F("level_started",{level_id:e})),this.maxTurns=_.getCurrentTurnLimit();const t=_.getMapForCurrentLevel();t?this.gridManager.loadMapConfig(t):this.gridManager.generateRandomMap(),this.currentTurn=1,this.cardManager.setupStartingHand(),this.cardChoices=[],this.extraCardAddedThisTurn=!1,this.eventCardSelectedThisTurn=!1,this.pendingSecondChoice=!1,this.launchCost=x.LAUNCH_PAD.launchCost,this.launchReward=x.LAUNCH_PAD.launchReward}preload(){this.load.image("droneDepo","assets/buildings/drone_depo.png"),this.load.image("ironMine","assets/buildings/iron_mine.png"),this.load.image("concreteMixer","assets/buildings/concrete_mixer.png"),this.load.image("solarPanel","assets/buildings/solar_panel.png"),this.load.image("windTurbine","assets/buildings/wind_turbine.png"),this.load.image("waterPump","assets/buildings/water_pump.png"),this.load.image("steelworks","assets/buildings/steelworks.png"),this.load.image("fuelRefinery","assets/buildings/fuel_refinery.png"),this.load.image("launchPad","assets/buildings/launch_pad.png"),this.load.image("launchPadSurrounding","assets/buildings/launch_pad_surrounding.png")}create(){this.createGrid(),this.uiScene=this.scene.get("UIScene"),this.scene.launch("UIScene",{gameScene:this,gridManager:this.gridManager,resourceManager:this.resourceManager,cardManager:this.cardManager,rewardsManager:this.rewardsManager}),this.setupInput(),this.setupResourceListeners(),_.LEVEL_PROGRESS.testingMode&&this.createTestingModeIndicator(),this.time.delayedCall(500,(()=>{this.showCardChoices()})),this.refreshRocketSprites()}createGrid(){this.gridContainer=this.add.container(50,80);for(let e=0;e<this.gridManager.gridSize;e++)for(let t=0;t<this.gridManager.gridSize;t++){const i=this.gridManager.getCell(t,e),n=t*C,s=e*C,r=(t+e)%2==0?"terrainPlain1":"terrainPlain2",a=this.add.sprite(n,s,r);if(a.setOrigin(0,0),a.displayWidth=C,a.displayHeight=C,a.setInteractive(),a.setData("gridX",t),a.setData("gridY",e),this.gridContainer.add(a),i.terrainSprite=a,i.feature){let r;if(i.feature===I.METAL.id){const i=I.METAL.textures;r=i[(t+3*e)%i.length]}else if(i.feature===I.WATER.id)r=I.WATER.texture;else if(i.feature===I.MOUNTAIN.id){const i=I.MOUNTAIN.textures;r=i[(t+e)%i.length]}if(r){const e=this.add.sprite(n,s,r);e.setOrigin(0,0),e.displayWidth=C,e.displayHeight=C,this.gridContainer.add(e),i.featureSprite=e}}if(i.building){const e=this.add.sprite(n,s,i.building);e.setOrigin(0,0),e.displayWidth=C,e.displayHeight=C,this.gridContainer.add(e),i.buildingSprite=e}const o=this.add.text(n+32,s+32,`${t},${e}`,{fontSize:"14px",fontFamily:"Arial",color:"#FFFFFF",stroke:"#000000",strokeThickness:3,fontWeight:"bold"});o.setOrigin(.5,.5),o.setVisible(!1),this.gridContainer.add(o),this.coordinateTexts.push(o)}this.updateCoordinateDisplay()}setupInput(){this.input.on("gameobjectdown",((e,t)=>{if(void 0!==t.getData("gridX")){const e=t.getData("gridX"),i=t.getData("gridY");this.selectedCard&&"building"===this.selectedCard.type?this.tryPlaceBuilding(e,i,this.selectedCard.building):this.selectCell(e,i)}})),this.input.on("pointerdown",(e=>{"CANVAS"!==e.downElement.nodeName||this.input.hitTestPointer(e).length||this.clearSelection()})),this.input.keyboard.on("keydown-D",(()=>{this.toggleDeveloperMode()}))}clearSelection(){null!==this.selectedCard&&(this.selectedCard=null,this.selectedCardIndex=void 0,this.clearIllegalTileShading()),this.uiScene&&(this.uiScene.clearCardChoiceSelection&&this.uiScene.clearCardChoiceSelection(),this.uiScene.clearInfoPanel(),this.uiScene.refreshUI())}calculateCardCost(e){let t={...e.cardType.cost};if(this.rewardsManager&&"building"===e.type&&e.building){const i=this.rewardsManager.getCardCostAdjustments(e.building.id);for(const e in i)t[e]?(t[e]+=i[e],t[e]<0&&(t[e]=0)):t[e]=i[e]}return t}tryPlaceBuilding(e,t,i){const n=this.gridManager.getCell(e,t);if(!n)return;if(!this.gridManager.canPlaceBuilding(e,t,i))return void(this.uiScene&&this.uiScene.showMessage("Cannot place building here."));const s=this.selectedCard?this.calculateCardCost(this.selectedCard):{};if(!this.resourceManager.hasSufficientResources(s))return void(this.uiScene&&this.uiScene.showMessage("Not enough resources to build this."));this.resourceManager.consumeResources(s),n.featureSprite&&(n.featureSprite.destroy(),n.featureSprite=null),this.gridManager.placeBuilding(e,t,i);const r=e*C,a=t*C,o=this.add.sprite(r,a,i.texture);if(o.setOrigin(0,0),o.displayWidth=C,o.displayHeight=C,this.gridContainer.add(o),n.buildingSprite=o,"launchPad"===i.id){const i=this.gridManager.getAdjacentCells(e,t),n=x.LAUNCH_PAD_SURROUNDING;for(const e of i){e.featureSprite&&(e.featureSprite.destroy(),e.featureSprite=null),this.gridManager.placeBuilding(e.x,e.y,n);const t=e.x*C,i=e.y*C,s=this.add.sprite(t,i,n.texture);s.setOrigin(0,0),s.displayWidth=C,s.displayHeight=C,s.setAlpha(.7),this.gridContainer.add(s),e.buildingSprite=s}this.refreshRocketSprites()}if("windTurbine"===i.id){const i=this.gridManager.getAdjacentCells(e,t),n=x.WIND_TURBINE_SURROUNDING;for(const e of i){e.featureSprite&&(e.featureSprite.destroy(),e.featureSprite=null),this.gridManager.placeBuilding(e.x,e.y,n);const t=e.x*C,i=e.y*C,s=this.add.sprite(t,i,n.texture);s.setOrigin(0,0),s.displayWidth=C,s.displayHeight=C,s.setAlpha(.7),this.gridContainer.add(s),e.buildingSprite=s}}if(i.production){let n=this.applyBuildingUpgrades(i.id,{...i.production},e,t);const s={[T.ENERGY]:n[T.ENERGY],[T.DRONES]:n[T.DRONES]};if(Object.keys(s).forEach((e=>{void 0===s[e]&&delete s[e]})),Object.keys(s).length>0)for(const e in s){this.resourceManager.modifyResource(e,s[e]);const t=e.charAt(0).toUpperCase()+e.slice(1);this.uiScene.showMessage(`${i.name} produced ${s[e]} ${t}`)}}if(this.rewardsManager&&this.rewardsManager.isRewardUnlocked("improvedElectricGenerationReward")&&"launchPadSurrounding"!==i.id&&"windTurbineSurrounding"!==i.id){const i=this.gridManager.getAdjacentCells(e,t);let n=0;for(const e of i)if("solarPanel"===e.building){const e=this.rewardsManager.findRewardById("improvedElectricGenerationReward");if(e&&e.effects){const t=e.effects.find((e=>"solarPanel"===e.buildingId&&e.adjacencyBonus));if(t&&t.adjacencyBonus.energy){n+=t.adjacencyBonus.energy}}}n>0&&(this.resourceManager.addResource(T.ENERGY,n),this.uiScene.showMessage(`Adjacent Solar Panels generated ${n} Energy`))}void 0!==this.selectedCardIndex&&this.cardManager.playCard(this.selectedCardIndex),this.selectedCard=null,this.selectedCardIndex=void 0,this.clearIllegalTileShading(),this.uiScene&&(this.uiScene.clearInfoPanel(),this.uiScene.refreshUI(),this.cardChoices.length>0&&this.uiScene.choicePanelContainer.visible&&this.uiScene.updateCardChoices(this.cardChoices))}selectCell(e,t){const i=this.gridManager.getCell(e,t);i&&(this.selectedCard=null,this.selectedCardIndex=void 0,this.clearIllegalTileShading(),this.uiScene&&(this.uiScene.clearCardChoiceSelection&&this.uiScene.clearCardChoiceSelection(),this.uiScene.showCellInfo(i,this),this.uiScene.selectedCardIndex=null))}selectCard(e){if(this.clearIllegalTileShading(),this.selectedCardIndex===e&&null!==this.selectedCard)return this.selectedCard=null,this.selectedCardIndex=void 0,void(this.uiScene&&(this.uiScene.clearInfoPanel(),this.uiScene.refreshUI()));const t=this.cardManager.getCardFromHand(e);t&&(this.selectedCard=t,this.selectedCardIndex=e,this.uiScene&&this.uiScene.showSelectedCard(t),"building"===t.type&&this.showIllegalTiles(t.building))}applyEvent(e){const t=this.cardManager.getCardFromHand(e);if(!t||"event"!==t.type)return!1;const i=this.calculateCardCost(t);if(!this.resourceManager.hasSufficientResources(i))return this.uiScene.showMessage("Not enough resources"),!1;for(const e in i)this.resourceManager.spendResource(e,i[e]);const n=t.cardType.effects||(t.cardType.effect?[t.cardType.effect]:[]);let s=[];for(const e of n)if("addResource"===e.type){this.resourceManager.modifyResource(e.resource,e.amount);const t=e.resource.charAt(0).toUpperCase()+e.resource.slice(1);s.push(`${e.amount} ${t}`)}return s.length>0&&this.uiScene.showMessage(`Added ${s.join(", ")}`),this.cardManager.playCard(e),this.selectedCard=null,this.selectedCardIndex=void 0,this.uiScene&&(this.uiScene.clearInfoPanel(),this.uiScene.refreshUI(),this.cardChoices.length>0&&this.uiScene.choicePanelContainer.visible&&this.uiScene.updateCardChoices(this.cardChoices)),!0}endTurn(){if(this.processProduction(),this.currentTurn>=this.maxTurns)return void this.gameOver();const e=this.gridManager.processRocketReturns();if(e>0){this.uiScene.showMessage(`${e} rocket${e>1?"s":""} returned to launch pad${e>1?"s":""}`);for(let e=0;e<this.gridManager.gridSize;e++)for(let t=0;t<this.gridManager.gridSize;t++){const i=this.gridManager.getCell(t,e);i&&"launchPad"===i.building&&i.hasRocket&&!0===i.justLanded&&this.animateRocketLanding(t,e)}}this.currentTurn++,this.extraCardAddedThisTurn=!1,this.eventCardSelectedThisTurn=!1,this.pendingSecondChoice=!1,this.updateRocketStates(),this.showCardChoices(),this.uiScene.refreshUI()}refreshRocketSprites(){for(let e=0;e<this.gridManager.gridSize;e++)for(let t=0;t<this.gridManager.gridSize;t++){const i=this.gridManager.getCell(t,e);if(i&&"launchPad"===i.building){if(i.justLanded)continue;if(i.hasRocket){const n="fueled"===i.rocketState?"rocketFueled":"rocketUnFueled";if(i.rocketSprite)i.rocketSprite.setTexture(n),i.rocketSprite.setVisible(!0);else{const s=t*C+32,r=e*C+32;i.rocketSprite=this.add.sprite(s,r,n),i.rocketSprite.setOrigin(.5,1);const a=44.8/Math.max(i.rocketSprite.width,i.rocketSprite.height);i.rocketSprite.setScale(a),this.gridContainer.add(i.rocketSprite)}}else i.rocketSprite&&i.rocketSprite.setVisible(!1)}}}launchRocket(e,t){return this.executeAction(e,t,"launchRocket")}animateRocketLanding(e,t){const i=this.gridManager.getCell(e,t);if(!i||"launchPad"!==i.building||!i.hasRocket)return;const n=e*C+32,s=t*C+32;i.rocketSprite&&i.rocketSprite.setVisible(!1);const r=44.8/Math.max(this.textures.get("rocketInFlight").get().width,this.textures.get("rocketInFlight").get().height),a=this.add.sprite(n,-100,"rocketInFlight");a.setOrigin(.5,1),a.setScale(r),this.gridContainer.add(a),this.tweens.add({targets:a,y:s,duration:2e3,ease:"Quad.easeOut",onComplete:()=>{const e=[{key:"rocketUnFueled",duration:200},{key:"rocketInFlight",duration:200},{key:"rocketUnFueled",duration:200},{key:"rocketInFlight",duration:200},{key:"rocketUnFueled",duration:200},{key:"rocketInFlight",duration:200},{key:"rocketUnFueled",duration:300}];let t=0;const o=this.time.addEvent({delay:200,callback:()=>{if(t++,t<e.length)a.setTexture(e[t].key);else{if(o.remove(),a.destroy(),i.rocketSprite){const e="fueled"===i.rocketState?"rocketFueled":"rocketUnFueled";i.rocketSprite.setTexture(e),i.rocketSprite.setVisible(!0)}else{const e="fueled"===i.rocketState?"rocketFueled":"rocketUnFueled";i.rocketSprite=this.add.sprite(n,s,e),i.rocketSprite.setOrigin(.5,1),i.rocketSprite.setScale(r),this.gridContainer.add(i.rocketSprite)}i.justLanded=!1}},repeat:e.length-1})}})}updateRocketStates(){for(let e=0;e<this.gridManager.gridSize;e++)for(let t=0;t<this.gridManager.gridSize;t++){const i=this.gridManager.getCell(t,e);i&&"launchPad"===i.building&&i.hasRocket&&this.gridManager.updateRocketState(t,e)}this.refreshRocketSprites()}processProduction(){const e=[];for(let t=0;t<this.gridManager.gridSize;t++)for(let i=0;i<this.gridManager.gridSize;i++){const n=this.gridManager.getCell(i,t);if(n&&n.building&&!n.processing){const s=n.building,r=Object.values(x).find((e=>e.id===s));r&&e.push({x:i,y:t,building:r})}}this.processFirstWaveProduction(e),this.processSecondWaveProduction(e)}processFirstWaveProduction(e){e.forEach((({x:e,y:t,building:i})=>{const n=this.gridManager.getCell(e,t);if(Object.keys(i.consumption||{}).length>0)return;let s=!1;if(i.production){let n=this.applyBuildingUpgrades(i.id,{...i.production},e,t);const r={};Object.entries(n).forEach((([e,t])=>{e!==T.ENERGY&&e!==T.DRONES&&(r[e]=t)})),Object.entries(r).forEach((([e,t])=>{this.resourceManager.addResource(e,t),s=!0}))}s&&(n.processing=!0)}))}processSecondWaveProduction(e){e.forEach((({x:e,y:t,building:i})=>{const n=this.gridManager.getCell(e,t);if(n.processing)return void(n.processing=!1);if(!(Object.keys(i.consumption||{}).length>0))return;if(this.resourceManager.hasSufficientResources(i.consumption)&&(Object.entries(i.consumption).forEach((([e,t])=>{this.resourceManager.spendResource(e,t)})),i.production)){let n=this.applyBuildingUpgrades(i.id,{...i.production},e,t);const s={};Object.entries(n).forEach((([e,t])=>{e!==T.ENERGY&&e!==T.DRONES&&(s[e]=t)})),Object.entries(s).forEach((([e,t])=>{this.resourceManager.addResource(e,t)}))}}))}applyBuildingUpgrades(e,t,i,n){return this.rewardsManager&&(t=this.rewardsManager.applyBuildingUpgrades(e,t,i,n)),t}gameOver(){const e=this.resourceManager.getResource(T.REPUTATION);this.uiScene&&this.uiScene.showGameOver(e)}playerVictory(){const e=this.resourceManager.getResource(T.REPUTATION);if(this.input.enabled=!1,this.uiScene.showMessage(`VICTORY! You've reached ${e} reputation points`),this.uiScene){const t=this.currentLevel.isRandom;this.uiScene.showVictory(e,this.currentLevel.reputationGoal,t)}}showCardChoices(){this.cardChoices=[];let e=[];for(let t=0;t<3;t++){if(0===this.cardManager.deck.length){if(0===this.cardManager.discardPile.length)break;this.cardManager.shuffleDiscardIntoDeck()}if(this.cardManager.deck.length>0){const t=this.cardManager.deck.pop();e.push(t)}}if(e.some((e=>"event"===e.type))&&!this.extraCardAddedThisTurn&&this.cardManager.deck.length>0){0===this.cardManager.deck.length&&this.cardManager.shuffleDiscardIntoDeck();const t=this.cardManager.deck.pop();e.push(t),this.extraCardAddedThisTurn=!0}this.cardChoices=e,this.uiScene&&this.cardChoices.length>0&&this.uiScene.showCardChoices(this.cardChoices)}selectCardChoice(e){if(e>=0&&e<this.cardChoices.length){const t=this.cardChoices[e];this.cardManager.hand.push(t),this.uiScene.updateHandDisplay();const i=t.cardType?t.cardType.name:t.building?t.building.name:"Card";this.uiScene.showMessage(`Added ${i} to your hand`);if("event"===t.type&&!this.eventCardSelectedThisTurn&&!this.pendingSecondChoice&&(this.eventCardSelectedThisTurn=!0,this.pendingSecondChoice=!0,this.cardChoices.splice(e,1),this.cardChoices.length>0))return this.uiScene.showMessage("You can choose one more card"),void this.uiScene.updateCardChoices(this.cardChoices);const n=[...this.cardChoices];n.splice(e,1);for(const e of n)this.cardManager.discardPile.push(e);this.cardChoices=[],this.pendingSecondChoice=!1,this.uiScene.hideCardChoices(),this.uiScene.refreshUI(),this.uiScene.updateEndTurnButton()}}showIllegalTiles(e){this.clearIllegalTileShading();for(let t=0;t<this.gridManager.gridSize;t++)for(let i=0;i<this.gridManager.gridSize;i++)if(!this.gridManager.canPlaceBuilding(i,t,e)){const e=i*C,n=t*C,s=this.add.sprite(e,n,"illegalTileShade");s.setOrigin(0,0),s.displayWidth=C,s.displayHeight=C,s.setAlpha(.5),this.gridContainer.add(s),this.illegalTileSprites.push(s)}}clearIllegalTileShading(){this.illegalTileSprites.length>0&&(this.illegalTileSprites.forEach((e=>{e&&e.active&&e.destroy()})),this.illegalTileSprites=[])}toggleDeveloperMode(){this.developerMode=!this.developerMode,this.updateCoordinateDisplay();const e=this.developerMode?"Developer Mode: ON":"Developer Mode: OFF";this.uiScene.showMessage(e)}updateCoordinateDisplay(){this.coordinateTexts.forEach((e=>{e.setVisible(this.developerMode)}))}setupResourceListeners(){const e=Object.keys(this.launchCost),t=(e,t,i)=>{this.updateRocketStates(),this.uiScene&&this.uiScene.updateLaunchButtonState()};e.forEach((e=>{this.resourceManager.addResourceChangeListener(e,t)}))}executeAction(e,t,i){const n=this.gridManager.getCell(e,t);if(!n||!n.building)return!1;const s=this.buildingActionManager.getBuildingActions(n.building).find((e=>e.action===i));return this.buildingActionManager.performAction(e,t,s)}animateRocketLaunch(e,t,i="regular"){const n=this.gridManager.getCell(e,t).rocketSprite;if(!n)return;const s=n.x,r=n.y,a=n.scaleX;n.setVisible(!1);const o=this.add.sprite(s,r,"rocketFueled");o.setOrigin(.5,1),o.setScale(a),this.gridContainer.add(o);let d=[];"regular"===i?d=[{key:"rocketInFlight",duration:200},{key:"rocketFueled",duration:200},{key:"rocketInFlight",duration:200},{key:"rocketFueled",duration:200},{key:"rocketInFlight",duration:200},{key:"rocketFueled",duration:200},{key:"rocketInFlight",duration:200}]:"fast"===i?d=[{key:"rocketInFlight",duration:120},{key:"rocketFueled",duration:30},{key:"rocketInFlight",duration:120},{key:"rocketFueled",duration:30},{key:"rocketInFlight",duration:120},{key:"rocketFueled",duration:30},{key:"rocketInFlight",duration:120}]:"heavy"===i&&(d=[{key:"rocketInFlight",duration:300},{key:"rocketFueled",duration:300},{key:"rocketInFlight",duration:200},{key:"rocketFueled",duration:200},{key:"rocketInFlight",duration:100},{key:"rocketFueled",duration:100},{key:"rocketInFlight",duration:50},{key:"rocketFueled",duration:50},{key:"rocketInFlight",duration:50}]);let c=0;const l=this.time.addEvent({delay:d[c].duration,callback:()=>{if(c++,c<d.length)o.setTexture(d[c].key);else{l.remove();const e=this.add.sprite(s,r,"rocketInFlight");e.setOrigin(.5,1),e.setScale(a),this.gridContainer.add(e),o.destroy();const t=100;let n=2e3;"fast"===i?n=1e3:"heavy"===i&&(n=3e3),this.tweens.add({targets:e,y:-t,duration:n,ease:"Quad.easeIn",onComplete:()=>{e.destroy()}})}},repeat:d.length-1})}createTestingModeIndicator(){const e=this.add.text(10,10,"🧪 TESTING MODE",{fontSize:"14px",fontStyle:"bold",color:"#00FF00",backgroundColor:"#000000",padding:{x:5,y:3}});e.setDepth(1e3),e.setScrollFactor(0)}}class j extends r().Scene{constructor(){super("LevelSelectScene")}init(){_.loadLevelProgress(),this.rewardsManager=new H(this),void 0===_.LEVEL_PROGRESS.testingMode&&(_.LEVEL_PROGRESS.testingMode=!1),this.input.keyboard.on("keydown-J",(e=>{e.shiftKey&&e.metaKey&&(_.LEVEL_PROGRESS.testingMode=!_.LEVEL_PROGRESS.testingMode,_.saveLevelProgress(),this.showTestingModeStatus(_.LEVEL_PROGRESS.testingMode))}))}create(){this.createLevelSelectionUI();const e=_.LEVEL_PROGRESS.completedLevels.level5,t=_.LEVEL_PROGRESS.randomLevelTutorialShown;e&&!t&&(this.showRandomLevelTutorial(),_.LEVEL_PROGRESS.randomLevelTutorialShown=!0,_.saveLevelProgress())}showTestingModeStatus(e){const t=e?"TESTING MODE: ON":"TESTING MODE: OFF",i=e?"#00FF00":"#FF0000";this.testingModeText&&this.testingModeText.destroy(),this.testingModeText=this.add.text(this.cameras.main.width/2,30,t,{fontSize:"18px",fontStyle:"bold",color:i,backgroundColor:"#000000",padding:{x:10,y:5}}),this.testingModeText.setOrigin(.5);const n=this.add.text(this.cameras.main.width/2,this.cameras.main.height/2,"Testing Mode "+(e?"Enabled":"Disabled"),{fontSize:"32px",fontStyle:"bold",color:i,backgroundColor:"#000000",padding:{x:20,y:10}});n.setOrigin(.5),n.setDepth(1e3),this.tweens.add({targets:n,alpha:0,duration:1500,ease:"Power2",onComplete:()=>{n.destroy()}})}createLevelSelectionUI(){const e=this.cameras.main.width,t=this.cameras.main.height;this.add.rectangle(0,0,e,t,0,.7).setOrigin(0,0);this.add.text(e/2,50,"MARS DECK COLONY",{fontSize:"32px",color:"#FFFFFF",fontStyle:"bold"}).setOrigin(.5,0),_.LEVEL_PROGRESS.testingMode&&(this.testingModeText=this.add.text(e/2,30,"TESTING MODE: ON",{fontSize:"18px",fontStyle:"bold",color:"#00FF00",backgroundColor:"#000000",padding:{x:10,y:5}}),this.testingModeText.setOrigin(.5));const i=220,n=_.LEVEL_PROGRESS.completedLevels.level5;if(k.forEach(((t,n)=>{const s=Math.floor(n/3),r=e/2+240*(n%3-1),a=145+100*s,o=_.LEVEL_PROGRESS.unlockedLevels.includes(t.id),d=_.LEVEL_PROGRESS.completedLevels[t.id];let c;o&&!d?(c=this.add.nineslice(r,a,"blueSquareButton",null,i,80,15,15,15,15),c.setOrigin(.5),this.tweens.add({targets:c,alpha:.8,duration:800,yoyo:!0,repeat:-1})):d?(c=this.add.nineslice(r,a,"greenSquareButton",null,i,80,15,15,15,15),c.setTint(5592405),c.setOrigin(.5)):(c=this.add.nineslice(r,a,"greySquareButton",null,i,80,15,15,15,15),c.setTint(3355443),c.setOrigin(.5));if(this.add.text(r,a,t.name,{fontSize:"18px",color:"#FFFFFF",fontStyle:"bold"}).setOrigin(.5),!o){this.add.text(r,a+20,"🔒",{fontSize:"16px"}).setOrigin(.5)}if(d){this.add.text(r,a+20,"COMPLETED",{fontSize:"12px",color:"#FFFFFF",fontStyle:"bold"}).setOrigin(.5)}o&&!d&&(c.setInteractive({useHandCursor:!0}),c.on("pointerover",(()=>{"function"==typeof c.setFillStyle?c.setFillStyle(6732799):c.setTint(12303359)})),c.on("pointerout",(()=>{"function"==typeof c.setFillStyle?c.setFillStyle(35071):c.clearTint()})),c.on("pointerdown",(()=>{_.LEVEL_PROGRESS.currentLevelId=t.id,this.scene.start("GameScene")})))})),n){const t=e/2+240*(2-1),n=145+100*1,s=this.add.nineslice(t,n,"blueSquareButton",null,i,80,15,15,15,15);s.setOrigin(.5),s.setInteractive({useHandCursor:!0}),this.tweens.add({targets:s,alpha:.8,duration:800,yoyo:!0,repeat:-1});this.add.text(t,n-15,"SOMEWHERE",{fontSize:"18px",color:"#FFFFFF",fontStyle:"bold"}).setOrigin(.5);this.add.text(t,n+15,"ON MARS",{fontSize:"18px",color:"#FFFFFF",fontStyle:"bold"}).setOrigin(.5),s.on("pointerover",(()=>{s.setTint(13400063)})),s.on("pointerout",(()=>{s.setTint(11163135)})),s.on("pointerdown",(()=>{_.generateRandomLevel(),this.scene.start("GameScene")}))}this.createRewardsDisplay();const s=5592405,r=this.add.nineslice(120,30,"redSquareButton",null,220,40,15,15,15,15);r.setOrigin(.5),r.setInteractive({useHandCursor:!0}),r.setTint(s);this.add.text(120,30,"RESET PROGRESS",{fontSize:"16px",color:"#FFFFFF",fontStyle:"bold"}).setOrigin(.5),r.on("pointerover",(()=>{r.setTint(14540253)})),r.on("pointerout",(()=>{r.setTint(s)})),r.on("pointerdown",(()=>{this.resetGameProgress()}));const a=e-60-10,o=t-20-10,d=53687091,c=this.add.nineslice(a,o,"blueSquareButton",null,120,40,15,15,15,15);c.setOrigin(.5),c.setInteractive({useHandCursor:!0}),c.setTint(d);this.add.text(a,o,"CREDITS",{fontSize:"16px",color:"#FFFFFF",fontStyle:"bold"}).setOrigin(.5),c.on("pointerover",(()=>{c.setTint(11184810)})),c.on("pointerout",(()=>{c.setTint(d)})),c.on("pointerdown",(()=>{this.showCreditsPanel()}))}createRewardsDisplay(){const e=this.cameras.main.width;this.cameras.main.height;this.add.text(e/2,350,"UNLOCKED REWARDS",{fontSize:"24px",color:"#FFDD00",fontStyle:"bold",stroke:"#000000",strokeThickness:3}).setOrigin(.5,0);const t=175,i=245,n=400,s=(e-1150)/2,r=_.LEVEL_PROGRESS.persistentRewards.rewardIds||[];for(let e=0;e<6;e++){const a=s+195*e;if(e<r.length){const s=r[e],o=this.rewardsManager.findRewardById(s);if(o){let e="cardBackground",s=null;if(o.effects)for(const e of o.effects)if(e.cardId){s=e.cardId;break}if(s){const t=Object.values(A).find((e=>e.id===s));t&&"prefab"===t.cardType?e="cardPrefabBackground":t&&"event"===t.cardType&&(e="cardEventBackground")}this.add.nineslice(a+87.5,522.5,e,null,t,i,15,15,35,15).setOrigin(.5);const r=this.add.graphics(),d=125,c=110;r.fillStyle(0,.6),r.fillRoundedRect(a+10,n+d,155,c,8);const l=20,h=(this.add.text(a+87.5,n+l,o.name,{fontSize:"14px",fontFamily:"Arial",color:"#ffffff",align:"center",fontWeight:"bold",stroke:"#000000",strokeThickness:2,wordWrap:{width:155}}).setOrigin(.5),80);if(o.image){const e=this.add.sprite(a+87.5,n+h,o.image),t=80;let i=t;const s=this.textures.get(o.image);if(s&&s.get()){const e=s.get().width,n=s.get().height;if(e&&n){i=t*(e/n)}}e.setDisplaySize(i,t)}const u=135;this.add.text(a+87.5,n+u,o.description,{fontSize:"11px",fontFamily:"Arial",color:"#ffffff",align:"center",wordWrap:{width:145},lineSpacing:2}).setOrigin(.5,0)}}else{this.add.rectangle(a+87.5,522.5,t,i,3355443,.6)}}}resetGameProgress(){_.LEVEL_PROGRESS.completedLevels={},_.LEVEL_PROGRESS.unlockedLevels=["level1"],_.LEVEL_PROGRESS.currentLevelId="level1",_.LEVEL_PROGRESS.persistentRewards={rewardIds:[],resourceBonuses:{}},_.LEVEL_PROGRESS.randomLevelsCompleted=0,_.LEVEL_PROGRESS.randomLevelTutorialShown=!1,_.saveLevelProgress();const e=this.add.text(this.cameras.main.width/2,this.cameras.main.height/2,"Progress Reset!",{fontSize:"32px",color:"#FFFFFF",backgroundColor:"#000000",padding:{x:20,y:10}});e.setOrigin(.5),this.time.delayedCall(500,(()=>{e.destroy(),this.scene.restart()}))}showRandomLevelTutorial(){const e=this.cameras.main.width,t=this.cameras.main.height,i=e/2-40,n=t/2,s=t/4,r=this.add.graphics();r.fillStyle(0,.7),r.fillRect(0,0,e/2,t);const a=this.add.nineslice(20+i/2,s+n/2,"panelGlassScrews",null,i,n,30,30,30,30);a.setOrigin(.5),a.setTint(3377373);const o=this.add.text(20+i/2,s+50,"NEW FEATURE UNLOCKED!",{fontSize:"24px",fontFamily:"Arial",color:"#ffdd00",align:"center",fontWeight:"bold"});o.setOrigin(.5);const d=this.add.text(20+i/2,s+90,"SOMEWHERE ON MARS",{fontSize:"22px",fontFamily:"Arial",color:"#ffffff",align:"center",fontWeight:"bold"});d.setOrigin(.5);const c=this.add.text(20+i/2,s+150,"You can now play a sequence of progressively harder random generated levels. See how far you can manage to get!",{fontSize:"18px",fontFamily:"Arial",color:"#ffffff",align:"center",wordWrap:{width:i-60}});c.setOrigin(.5,0);const l=e/2+50,h=s+35,u=this.add.text(l,h,"→",{fontSize:"120px",fontFamily:"Arial",color:"#ffdd00"});u.setOrigin(.5);const g=150,f=20+i/2-75,p=s+n-60,R=this.add.nineslice(f+75,p+20,"blueGlossSquareButton",null,g,40,15,15,15,15);R.setOrigin(.5),R.setInteractive({useHandCursor:!0});const E=this.add.text(f+75,p+20,"GOT IT",{fontSize:"18px",fontFamily:"Arial",color:"#ffffff",fontWeight:"bold"});E.setOrigin(.5),R.on("pointerover",(()=>{R.setTint(11197951)})),R.on("pointerout",(()=>{R.clearTint()})),R.on("pointerdown",(()=>{const e=this.add.container(0,0);e.add([r,a,o,d,c,u,R,E]),this.tweens.add({targets:e,alpha:0,duration:300,ease:"Power2",onComplete:()=>{e.destroy()}})})),this.tweens.add({targets:u,scaleX:1.2,scaleY:1.2,duration:800,yoyo:!0,repeat:-1})}showCreditsPanel(){F("credits_viewed");const e=this.cameras.main.width,t=this.cameras.main.height;this.creditsContainer=this.add.container(0,0),this.creditsContainer.setDepth(100);const i=this.add.graphics();i.fillStyle(0,.8),i.fillRect(0,0,e,t);const n=new(r().Geom.Rectangle)(0,0,e,t);i.setInteractive(n,r().Geom.Rectangle.Contains),i.on("pointerdown",(function(e,t,i,n){n.stopPropagation()})),i.on("pointerup",(function(e,t,i,n){n.stopPropagation()})),i.on("pointermove",(function(e,t,i,n){n.stopPropagation()})),i.on("pointerover",(function(e,t,i,n){n.stopPropagation()})),this.creditsContainer.add(i);const s=800,a=(e-800)/2,o=(t-s)/2,d=this.add.nineslice(a+400,o+400,"panelGlassScrews",null,800,s,30,30,30,30);d.setOrigin(.5),d.setTint(2236962),this.creditsContainer.add(d);const c=this.add.text(e/2,o+40,"CREDITS",{fontSize:"32px",fontFamily:"Arial",color:"#ffffff",align:"center",fontWeight:"bold"});c.setOrigin(.5),this.creditsContainer.add(c);const l=this.add.text(e/2,o+100,["Mars Deck Colony","","Game Design & Development","Magic Paw","","Special Thanks","To all the beta testers for their feedback and suggestions!","And my wife for her patience and support","","Art Assets","UI pack: https://kenney.nl/assets/ui-pack-sci-fi","Sci-fi RTS: https://kenney.nl/assets/sci-fi-rts","Rockets pack: https://kenney.nl/assets/space-shooter-extension","Mine wagon icon: https://game-icons.net/1x1/delapouite/mine-wagon.html","Mine truck icon: https://game-icons.net/1x1/delapouite/mine-truck.html","Battle Mech icon: https://game-icons.net/1x1/delapouite/battle-mech.html","Electrical resistance icon: https://game-icons.net/1x1/delapouite/electrical-resistance.html","Gas pump icon: https://game-icons.net/1x1/delapouite/gas-pump.html","Drop icon: https://game-icons.net/1x1/lorc/drop.html"],{fontSize:"18px",fontFamily:"Arial",color:"#ffffff",align:"center",lineSpacing:10});l.setOrigin(.5,0),this.creditsContainer.add(l);const h=o+s-40-30,u=this.add.nineslice(e/2,h,"blueGlossSquareButton",null,120,40,15,15,15,15);u.setOrigin(.5),u.setInteractive({useHandCursor:!0}),this.creditsContainer.add(u);const g=this.add.text(e/2,h,"BACK",{fontSize:"18px",fontFamily:"Arial",color:"#ffffff",fontWeight:"bold"});g.setOrigin(.5),this.creditsContainer.add(g),u.on("pointerover",(()=>{u.setTint(14540253)})),u.on("pointerout",(()=>{u.clearTint()})),u.on("pointerdown",(()=>{this.creditsContainer.destroy()}))}}class Y extends r().Scene{constructor(){super("UIScene"),this.gameScene=null,this.cardWidth=80,this.cardHeight=140,this.cardSpacing=5,this.INFO_SPRITE_SIZE=80,this.buttonHeight=30,this.selectedCardIndex=void 0,this.resourceManager=null,this.cardManager=null,this.rewardsManager=null,this.handContainer=null,this.cardSlotsContainer=null,this.infoPanel=null,this.actionsPanel=null,this.messageText=null,this.messageTimer=null,this.messageDisplayTime=3e3,this.panelHeight=150,this.buttonEffectConfig={color:4491519,alpha:{start:.8,end:0},scale:{start:.3,end:1.5},speed:150,lifespan:600,quantity:15,blendMode:"ADD"}}init(e){this.gameScene=e.gameScene,this.gridManager=e.gridManager,this.resourceManager=e.resourceManager,this.cardManager=e.cardManager,this.rewardsManager=e.rewardsManager,this.resourcesPanel=null,this.infoPanel=null,this.handPanel=null,this.messageBox=null,this.actionsPanel=null}create(){this.createLayout(),this.createResourcesPanel(),this.createInfoPanel(),this.createActionsPanel(),this.createChoicePanel(),this.createHandPanel(),this.createMessageBox(),this.createBottomPanel(),this.createHelpButton(),this.refreshUI(),"level1"===_.getCurrentLevel().id&&this.showTutorialPanel(),this.selectedChoiceIndex=null,this.input.on("pointerdown",(e=>{if(null!==this.selectedChoiceIndex&&this.grabButton){if(this.grabButton){if(this.grabButton.getBounds().contains(e.x,e.y))return}let t=!1;if(this.choiceContainer&&this.choiceContainer.visible&&this.choiceContainer.list.length>0)for(let i=0;i<this.choiceContainer.list.length;i++){const n=this.choiceContainer.list[i];if(n){const i=n.getBounds();if(new(r().Geom.Rectangle)(i.x,i.y,i.width,i.height).contains(e.x,e.y)){t=!0;break}}}t||(this.clearCardChoiceSelection(),this.clearInfoPanel())}}))}createLayout(){const e=this.cameras.main.width,t=this.cameras.main.height,i=10,n=t-640;this.createPanel(0,0,e,50,2236962,.8);const s=450,r=e-s;this.createPanel(r,60,s,300,2236962,.8);this.createPanel(r,370,s,n,2236962,.8);const a=t-50-i-200;this.choicePanelBg=this.createPanel(r,a,s,200,2236962,.8),this.bottomPanelBg=this.createPanel(r,t-50,s,50,2236962,.8);const o=8*(this.cardWidth+this.cardSpacing);this.createPanel(0,636,o+20,this.cardHeight+20,2236962,.8)}createPanel(e,t,i,n,s,r){const a=this.add.graphics();return a.fillStyle(s,r),a.fillRect(e,t,i,n),a}createResourcesPanel(){const e=this.cameras.main.width;Object.values(T);this.resourceTexts={};const t=[T.ENERGY,T.DRONES,T.IRON,T.STEEL,T.WATER,T.FUEL,T.CONCRETE],i=e/(t.length+1);t.forEach(((e,t)=>{const n=i*(t+1),s=e.charAt(0).toUpperCase()+e.slice(1);this.resourceTexts[e]=this.add.text(n,25,`${s}: 0`,{fontSize:"16px",fontFamily:"Arial",color:"#ffffff",align:"center"}).setOrigin(.5,.5)}))}createInfoPanel(){const e=this.cameras.main.width-450;this.infoPanelContainer=this.add.container(e,60);const t=this.add.text(20,10,"INFORMATION",{fontSize:"20px",fontFamily:"Arial",color:"#ffffff"});this.infoTitle=this.add.text(20,50,"",{fontSize:"16px",fontFamily:"Arial",color:"#ffffff",fontWeight:"bold"}),this.infoContent=this.add.text(20,65,"",{fontSize:"14px",fontFamily:"Arial",color:"#ffffff",wordWrap:{width:410}}),this.infoSprite=this.add.sprite(225,190,"gridTile"),this.infoSprite.setDisplaySize(this.INFO_SPRITE_SIZE,this.INFO_SPRITE_SIZE),this.infoSprite.setVisible(!1),this.infoPanelContainer.add(t),this.infoPanelContainer.add(this.infoTitle),this.infoPanelContainer.add(this.infoContent),this.infoPanelContainer.add(this.infoSprite)}createActionsPanel(){const e=this.cameras.main.width-450;this.actionsPanelContainer=this.add.container(e,370),this.actionsTitle=this.add.text(20,10,"ACTIONS",{fontSize:"20px",fontFamily:"Arial",color:"#ffffff"}),this.actionsContainer=this.add.container(20,40),this.actionsPanelContainer.add(this.actionsTitle),this.actionsPanelContainer.add(this.actionsContainer),this.actionsContainer.setVisible(!1)}createChoicePanel(){const e=this.cameras.main.width-450,t=this.cameras.main.height-50-10-200;this.choicePanelContainer=this.add.container(e,t),this.choiceTitle=this.add.text(20,10,"CHOOSE A CARD",{fontSize:"20px",fontFamily:"Arial",color:"#ffffff"}),this.choiceContainer=this.add.container(20,40),this.choicePanelContainer.add(this.choiceTitle),this.choicePanelContainer.add(this.choiceContainer),this.choicePanelContainer.setVisible(!1),this.choicePanelBg.visible=!1}createHandPanel(){this.cardSlotsContainer=this.add.container(10,646),this.handContainer=this.add.container(10,646),this.createCardSlots()}createCardSlots(){this.cardSlotsContainer.removeAll(!0);for(let e=0;e<8;e++){let t;t=e<6?e*(this.cardWidth+this.cardSpacing):e*(this.cardWidth+this.cardSpacing)+2*this.cardSpacing;const i=this.add.nineslice(t,0,"cardSlotBackground",null,this.cardWidth,this.cardHeight,10,10,10,10);if(i.setOrigin(0,0),i.setAlpha(.7),this.cardSlotsContainer.add(i),5===e){const e=t+this.cardWidth+this.cardSpacing,i=this.add.sprite(e,0,"handLimitIndicator");i.setDisplaySize(5,this.cardHeight),i.setOrigin(0,0),i.setAlpha(.9),this.cardSlotsContainer.add(i)}}}createMessageBox(){const e=this.cameras.main.width/2-150;this.messageBox=this.add.container(e,20),this.messageBox.setVisible(!1);const t=this.add.graphics();t.fillStyle(0,.8),t.fillRect(0,0,300,50),this.messageBox.add(t),this.messageText=this.add.text(150,25,"",{fontSize:"14px",fontFamily:"Arial",color:"#ffffff",align:"center"}),this.messageText.setOrigin(.5),this.messageBox.add(this.messageText)}createBottomPanel(){const e=this.cameras.main.width,t=this.cameras.main.height,i=e-450,n=_.getCurrentVictoryGoal(),s=this.add.text(i+20,t-25,`Reputation: 0/${n}`,{fontSize:"16px",fontFamily:"Arial",color:"#ffffff"});s.setOrigin(0,.5),this.resourceTexts[T.REPUTATION]=s,this.turnText=this.add.text(i+225,t-25,"Turn: 1/30",{fontSize:"16px",fontFamily:"Arial",color:"#ffffff"}),this.turnText.setOrigin(.5,.5);const a=100,o=this.add.sprite(0,0,"blueGlossSquareButton");o.setDisplaySize(a,30),o.setOrigin(0,0);const d=this.add.text(50,15,"END TURN",{fontSize:"16px",fontFamily:"Arial",color:"#ffffff",fontWeight:"bold"});d.setOrigin(.5),this.endTurnButton=this.add.container(i+450-a-20,t-25),this.endTurnButton.setY(this.endTurnButton.y-15),this.endTurnButton.add(o),this.endTurnButton.add(d),this.endTurnButton.setInteractive(new(r().Geom.Rectangle)(0,0,a,30),r().Geom.Rectangle.Contains),this.endTurnButton.on("pointerdown",(()=>{this.playEndTurnButtonEffect(),this.gameScene.endTurn()})),this.endTurnButton.on("pointerover",(()=>{o.setTint(11193599)})),this.endTurnButton.on("pointerout",(()=>{o.clearTint()})),this.endTurnButtonBg=o,this.updateEndTurnButton()}updateEndTurnButton(){const e=this.cardManager.getHand().length;e>6?(this.endTurnButton.disableInteractive(),this.endTurnButtonBg.setTint(6710886),this.showMessage(`Hand over limit! Discard ${e-6} card(s)`)):(this.endTurnButton.setInteractive(new(r().Geom.Rectangle)(0,0,100,30),r().Geom.Rectangle.Contains),this.endTurnButtonBg.clearTint())}refreshUI(){if(null===this.gameScene.selectedCard&&(this.selectedCardIndex=null),this.gameScene.gridManager&&this.gameScene.buildingActionManager)for(let e=0;e<this.gameScene.gridManager.gridSize;e++)for(let t=0;t<this.gameScene.gridManager.gridSize;t++){const i=this.gameScene.gridManager.getCell(t,e);if(i&&"launchPad"===i.building&&i.hasRocket){const i=`${t},${e}`;this.gameScene.buildingActionManager.rocketInFlight[i]&&console.warn("Found inconsistent rocket state during UI refresh, a rocket is in flight but the cell hasRocket is true")}}this.updateResourceDisplay(),this.updateHandDisplay(),this.updateTurnDisplay(),this.updateActionsPanel(),this.updateEndTurnButton()}updateResourceDisplay(){const e=this.resourceManager.getAllResources();for(const t in this.resourceTexts){const i=t.charAt(0).toUpperCase()+t.slice(1);if(t===T.REPUTATION){const n=_.getCurrentVictoryGoal();this.resourceTexts[t].setText(`${i}: ${e[t]}/${n}`)}else this.resourceTexts[t].setText(`${i}: ${e[t]}`)}}updateHandDisplay(){this.handContainer.removeAll(!0);this.cardManager.getHand().forEach(((e,t)=>{const i=this.createCardSprite(e,t);this.handContainer.add(i)}))}updateTurnDisplay(){this.turnText.setText(`Turn: ${this.gameScene.currentTurn}/${this.gameScene.maxTurns}`)}createCardSprite(e,t){let i;i=t<6?t*(this.cardWidth+this.cardSpacing):t*(this.cardWidth+this.cardSpacing)+2*this.cardSpacing;const n=this.add.container(i,0);let s,r="cardBackground";if("prefab"===e.cardType.cardType?r="cardPrefabBackground":"event"===e.cardType.cardType&&(r="cardEventBackground"),s=this.add.nineslice(0,0,r,null,this.cardWidth,this.cardHeight,10,10,35,15),s.setOrigin(0,0),t===this.selectedCardIndex){const e=this.add.rectangle(0,0,this.cardWidth,this.cardHeight,16776960,.3);e.setOrigin(0,0),n.add(e)}s.setInteractive(),s.on("pointerdown",(()=>{this.onCardClick(t)})),n.add(s);const a=e.cardType.name,o=this.add.text(this.cardWidth/2,10,a,{fontSize:"12px",fontFamily:"Arial",color:"#000000",align:"center"});o.setOrigin(.5,0),n.add(o);let d="placeholderTexture";"building"===e.type?d=e.cardType&&e.cardType.cardTexture?e.cardType.cardTexture:e.building.texture:"event"===e.type&&(d=e.cardType.cardTexture);const c=this.add.sprite(this.cardWidth/2,45,d);if(c.setDisplaySize(40,40),c.setOrigin(.5),n.add(c),e.cardType&&e.cardType.cost){let t=75,i=this.gameScene.calculateCardCost(e),s=!1;for(const e in i)if(i[e]>0){s=!0;const r=e.charAt(0).toUpperCase()+e.slice(1),a=i[e],o=this.resourceManager.getResource(e)>=a?"#000000":"#ff0000",d=this.add.text(5,t,`${r}: ${a}`,{fontSize:"10px",fontFamily:"Arial",color:o});n.add(d),t+=12}if(!s){const e=this.add.text(5,75,"No cost",{fontSize:"10px",fontFamily:"Arial",color:"#000000"});n.add(e)}}return n}onCardClick(e){this.clearCardChoiceSelection(),this.selectedCardIndex=e,this.gameScene.selectCard(e),this.updateHandDisplay(),this.updateActionsPanel()}showCellInfo(e,t){this.clearInfoPanel();const i=Object.values(m).find((t=>t.id===e.terrain));let n="",s="",r="";if(e.feature){const t=Object.values(I).find((t=>t.id===e.feature));t&&(n=t.name,s=t.description,r=t.texture)}else n=i.name,s=i.description,r=i.texture;if(this.infoTitle.setText(n),this.infoContent.setText(s),r&&(this.infoSprite.setTexture(r),this.infoSprite.setDisplaySize(this.INFO_SPRITE_SIZE,this.INFO_SPRITE_SIZE),this.infoSprite.setVisible(!0)),e.building){const i=Object.values(x).find((t=>t.id===e.building));if(i){this.infoTitle.setText(i.name);let n=i.description+"\n\n";if("launchPad"===i.id&&(n+="Status:\n",e.hasRocket?"fueled"===e.rocketState?n+="Rocket ready\n":n+="Rocket needs fuel\n":n+="Rocket in flight\n"),Object.keys(i.production).length>0){const s=t.applyBuildingUpgrades(i.id,{...i.production},e.x,e.y);n+="Production:\n";for(const r in s){const a=r.charAt(0).toUpperCase()+r.slice(1),o=i.production[r],d=s[r],c=d-o;if(c>0){const s=t.gridManager.isAdjacentToBuildingType(e.x,e.y,"droneDepo")&&r!==T.ENERGY&&r!==T.DRONES&&r!==T.REPUTATION&&t.rewardsManager&&t.rewardsManager.isRewardUnlocked("droneSupportReward"),o="steelworks"===i.id&&r===T.STEEL&&t.gridManager.isAdjacentToBuildingType(e.x,e.y,"ironMine"),l="fuelRefinery"===i.id&&r===T.FUEL&&t.gridManager.isAdjacentToBuildingType(e.x,e.y,"waterPump");let h=s?1:0,u=o||l?1:0,g=c-h-u;n+=`${a}: +${d} (`;let f=[];g>0&&f.push(`upgrade: +${g}`),h>0&&f.push(`drone depo: +${h}`),u>0&&f.push(`supply chain: +${u}`),n+=f.join(", "),n+=")\n"}else n+=`${a}: +${o}\n`}}if(Object.keys(i.consumption).length>0){n+="\nConsumption:\n";for(const e in i.consumption){n+=`${e.charAt(0).toUpperCase()+e.slice(1)}: -${i.consumption[e]}\n`}}this.infoContent.setText(n),this.infoSprite.setTexture(i.texture),this.infoSprite.setDisplaySize(this.INFO_SPRITE_SIZE,this.INFO_SPRITE_SIZE),this.infoSprite.setVisible(!0),this.selectedCell=e,this.updateActionsPanel()}}}showSelectedCard(e){if(this.clearInfoPanel(),this.infoTitle.setText(e.cardType.name),"building"===e.type){const t=e.building;if(t){let i=e.cardType.description+"\n\n";i+="Construction cost:\n";let n=this.gameScene.calculateCardCost(e),s=!1;for(const e in n)if(n[e]>0){s=!0;const t=n[e];this.resourceManager.getResource(e);i+=`${e.charAt(0).toUpperCase()+e.slice(1)}: ${t}\n`}s||(i+="No cost\n");let r="\n";if("launchPad"===t.id){r+="Launch cost:\n";for(const e in t.launchCost){r+=`${e.charAt(0).toUpperCase()+e.slice(1)}: ${t.launchCost[e]}\n`}r+=`Reputation reward: +${t.launchReward}\n\n`}if(Object.keys(t.production).length>0){let e={...t.production};if(this.scene.manager.getScene("GameScene")){e=this.scene.manager.getScene("GameScene").applyBuildingUpgrades(t.id,e,void 0,void 0)}r+="Production:\n";for(const i in e){const n=i.charAt(0).toUpperCase()+i.slice(1),s=t.production[i],a=e[i],o=a-s;r+=o>0?`${n}: +${a} (upgrade: +${o})\n`:`${n}: +${s}\n`}Object.keys(t.production).some((e=>e!==T.ENERGY&&e!==T.DRONES))}if(Object.keys(t.consumption).length>0){r+="\nConsumption:\n";for(const e in t.consumption){r+=`${e.charAt(0).toUpperCase()+e.slice(1)}: -${t.consumption[e]}\n`}}i+=r,this.infoContent.setText(i),this.infoSprite.setTexture(t.texture),this.infoSprite.setDisplaySize(this.INFO_SPRITE_SIZE,this.INFO_SPRITE_SIZE),this.infoSprite.setVisible(!0)}else this.infoContent.setText("Unknown building card")}else if("event"===e.type){let t=e.cardType.description+"\n\n";t+="Cost:\n";let i=this.gameScene.calculateCardCost(e),n=!1;for(const e in i)if(i[e]>0){n=!0;const s=i[e],r=this.resourceManager.getResource(e),a=r>=s,o=e.charAt(0).toUpperCase()+e.slice(1);t+=a?`${o}: ${s}\n`:`${o}: ${s} (have ${r})\n`}n||(t+="No cost\n"),t+="\nEffect:\n";const s=e.cardType.effects||(e.cardType.effect?[e.cardType.effect]:[]);if(0===s.length)t+="No effects\n";else for(const e of s)if("addResource"===e.type){const i=e.resource.charAt(0).toUpperCase()+e.resource.slice(1);t+=`• Add ${e.amount} ${i}\n`}this.infoContent.setText(t);const r=e.cardType.cardTexture||"placeholderTexture";this.infoSprite.setTexture(r),this.infoSprite.setDisplaySize(this.INFO_SPRITE_SIZE,this.INFO_SPRITE_SIZE),this.infoSprite.setVisible(!0)}}clearInfoPanel(){this.infoTitle.setText(""),this.infoContent.setText(""),this.infoSprite.setVisible(!1),this.selectedCell=null,this.costTexts&&(this.costTexts.forEach((e=>{e&&e.destroy()})),this.costTexts=[]),this.additionalContent&&(this.additionalContent.destroy(),this.additionalContent=null),this.actionsContainer.setVisible(!1)}showMessage(e){this.messageText.setText(e),this.messageBox.setVisible(!0),this.time.delayedCall(3e3,(()=>{this.messageBox.setVisible(!1)}))}showNewCards(e){e.length>0&&this.showMessage(`Drew ${e.length} new card(s)`)}showGameOver(e){this.handContainer.removeAll(!0);const t=this.cameras.main.width,i=this.cameras.main.height,n=this.add.graphics();n.fillStyle(0,.8),n.fillRect(t/2-200,i/2-150,400,300),this.add.text(t/2,i/2-120,"GAME OVER",{fontSize:"32px",fontFamily:"Arial",color:"#ffffff",align:"center"}).setOrigin(.5),this.add.text(t/2,i/2-50,`Reputation: ${e}`,{fontSize:"20px",fontFamily:"Arial",color:"#ffffff",align:"center"}).setOrigin(.5);const s=this.add.container(t/2,i/2+80),a=this.add.graphics();a.fillStyle(10044672,1),a.fillRoundedRect(-75,-20,150,40,5);const o=this.add.text(0,0,"PLAY AGAIN",{fontSize:"18px",fontFamily:"Arial",color:"#ffffff",align:"center"}).setOrigin(.5);s.add(a),s.add(o),s.setInteractive(new(r().Geom.Rectangle)(-75,-20,150,40),r().Geom.Rectangle.Contains),s.on("pointerdown",(()=>{this.scene.stop("UIScene"),this.scene.stop("GameScene"),this.scene.start("GameScene")})),s.on("pointerover",(()=>{a.clear(),a.fillStyle(13395456,1),a.fillRoundedRect(-75,-20,150,40,5)})),s.on("pointerout",(()=>{a.clear(),a.fillStyle(10044672,1),a.fillRoundedRect(-75,-20,150,40,5)}))}showVictory(e,t,i=!1){const n=this.cameras.main.width,s=800,r=(n-s)/2,a=(this.cameras.main.height-600)/2,o=this.add.nineslice(r+400,a+300,"panelGlassScrews",null,s,600,30,30,30,30);o.setOrigin(.5),o.setTint(3377373);const d=this.add.container(0,0);d.name="victoryContainer";const c=this.add.text(n/2,a+100,"VICTORY!",{fontSize:"64px",fontFamily:"Arial",color:"#ffdd00",align:"center"}).setOrigin(.5);c.setStroke("#ff8800",4),c.setShadow(0,0,"#ff8800",20,!0),d.add(c),d.add(this.add.text(n/2,a+200,`You reached ${e} reputation points!`,{fontSize:"24px",fontFamily:"Arial",color:"#ffffff",align:"center"}).setOrigin(.5)),d.add(this.add.text(n/2,a+240,`(required: ${t})`,{fontSize:"18px",fontFamily:"Arial",color:"#aaddff",align:"center"}).setOrigin(.5));const l=_.getCurrentLevel();if(i){const e=`You've successfully established a new colony on Mars! Your Mars colonization skills continue to improve.You've completed ${_.LEVEL_PROGRESS.randomLevelsCompleted||0} challenge missions so far.`;d.add(this.add.text(n/2,a+300,e,{fontSize:"18px",fontFamily:"Arial",color:"#ffffff",align:"center",wordWrap:{width:700}}).setOrigin(.5));const t=200,i=40,s=n/2-t/2,r=a+380,o=this.createActionButton("CONTINUE EXPLORING",(()=>{_.advanceToNextLevel(),_.saveLevelProgress(),this.scene.stop("UIScene"),this.scene.stop("GameScene"),this.scene.start("LevelSelectScene")}),2263091,t,i);o.setPosition(s,r),d.add(o)}else if(l&&"level5"===l.id){const e="You have proven yourself and helped build orbital infrastructure! You are now authorized to create colonies all over Mars. The future of humanity's expansion throughout the solar system begins here!";d.add(this.add.text(n/2,a+300,e,{fontSize:"18px",fontFamily:"Arial",color:"#ffffff",align:"center",wordWrap:{width:700}}).setOrigin(.5));const t=200,i=40,s=n/2-t/2,r=a+380,o=this.createActionButton("VENTURE FORWARD",(()=>{_.LEVEL_PROGRESS.completedLevels[l.id]=!0,_.saveLevelProgress(),this.scene.stop("UIScene"),this.scene.stop("GameScene"),this.scene.start("LevelSelectScene")}),2263091,t,i);o.setPosition(s,r),d.add(o)}else{const e="Your Mars colony is thriving! Your leadership skills have impressed the United Earth Government, and more resources will be provided for your next mission.";d.add(this.add.text(n/2,a+300,e,{fontSize:"18px",fontFamily:"Arial",color:"#ffffff",align:"center",wordWrap:{width:700}}).setOrigin(.5));const t=200,i=40,s=n/2-t/2,r=a+380,c=this.createActionButton("VIEW REWARDS",(()=>{_.advanceToNextLevel(),_.saveLevelProgress(),d.setVisible(!1),o.setVisible(!1),this.showRewards()}),2263091,t,i);c.setPosition(s,r),d.add(c)}}showRewards(){this.resourceManager.setVictoryCheckEnabled(!1),this.helpButton&&this.helpButton.setVisible(!1);const e=this.cameras.main.width,t=this.cameras.main.height,i=10,n=e-20,s=t-20,a=this.add.graphics();a.fillStyle(0,.7),a.fillRect(0,0,e,t);const o=this.add.nineslice(10+n/2,i+s/2,"panelGlassScrews",null,n,s,30,30,30,30);o.setOrigin(.5),o.setTint(742292);this.add.text(e/2,60,"SELECT YOUR REWARD",{fontSize:"38px",fontFamily:"Arial",color:"#ffdd00",align:"center",fontWeight:"bold",stroke:"#ff8800",strokeThickness:5,shadow:{offsetX:2,offsetY:2,color:"#000000",blur:5,fill:!0}}).setOrigin(.5);this.add.text(e/2,110,"Choose one enhancement for your colony",{fontSize:"20px",fontFamily:"Arial",color:"#ffffff",align:"center",fontWeight:"bold"}).setOrigin(.5);const d=this.add.container(0,0);d.name="rewardsContainer";const c=250,l=350,h=(e-850)/2,u=_.getAvailableRewards();let g=[];u&&u.rewardIds&&(g=u.rewardIds||[]);g.map(((e,t)=>{const i=this.rewardsManager.findRewardById(e);return i?{id:i.id,name:i.name,image:i.image,description:i.description,effect:()=>{this.rewardsManager.unlockReward(i.id)&&(this.showMessage(`Unlocked: ${i.name}`),this.replaceUnlockButtonWithLabel(t,i.name),this.disableAllRewardsExcept(t))},isUnlocked:this.rewardsManager.isRewardUnlocked(i.id)}:(console.error(`Reward with ID ${e} not found`),null)})).filter((e=>null!==e)).forEach(((e,t)=>{const i=h+300*t;let n="cardBackground";const s=this.rewardsManager.findRewardById(e.id);let a=null;if(s&&s.effects)for(const e of s.effects)if(e.cardId){a=e.cardId;break}if(a){const e=Object.values(A).find((e=>e.id===a));e&&"prefab"===e.cardType?n="cardPrefabBackground":e&&"event"===e.cardType&&(n="cardEventBackground")}const o=this.add.nineslice(i+125,335,n,null,c,l,15,15,35,15);o.setOrigin(.5),d.add(o);const u=this.add.graphics();u.fillStyle(0,.6),u.fillRoundedRect(i+20,350,210,140,8),d.add(u);const g=this.add.text(i+125,180,e.name,{fontSize:"20px",fontFamily:"Arial",color:"#ffffff",align:"center",fontWeight:"bold",stroke:"#000000",strokeThickness:3}).setOrigin(.5);d.add(g);const f=this.add.sprite(i+125,280,e.image),p=this.textures.get(e.image);let R=130;if(p&&p.get()){const e=p.get().width,t=p.get().height;if(e&&t){R=130*(e/t)}}f.setDisplaySize(R,130),d.add(f);const E=this.add.text(i+125,370,e.description,{fontSize:"16px",fontFamily:"Arial",color:"#ffffff",align:"center",wordWrap:{width:190},lineSpacing:5}).setOrigin(.5,0);d.add(E);if(e.isUnlocked){const e=this.add.text(i+125,535,"UNLOCKED",{fontSize:"18px",fontFamily:"Arial",color:"#ffcc00",align:"center",fontWeight:"bold",stroke:"#000000",strokeThickness:2}).setOrigin(.5);d.add(e)}else{const n=140,s=40,a=45,o=this.add.sprite(0,0,"blueGlossSquareButton");o.setDisplaySize(n,s),o.setOrigin(0,0);const c=this.add.text(n/2,s/2,"UNLOCK",{fontSize:"16px",fontFamily:"Arial",color:"#ffffff",fontWeight:"bold"});c.setOrigin(.5);const l=this.add.container(i+125-n/2,510-s+a);l.name=`unlock-button-${t}`,l.add(o),l.add(c),l.setInteractive(new(r().Geom.Rectangle)(0,0,n,s),r().Geom.Rectangle.Contains),l.on("pointerdown",e.effect),l.on("pointerover",(()=>{o.setTint(14540253)})),l.on("pointerout",(()=>{o.clearTint()})),d.add(l),e.button=l}}));const f=220,p=this.add.sprite(0,0,"blueGlossSquareButton");p.setDisplaySize(f,50),p.setOrigin(0,0);const R=this.add.text(110,25,"CONTINUE",{fontSize:"18px",fontFamily:"Arial",color:"#ffffff",fontWeight:"bold"});R.setOrigin(.5);const E=this.add.container(e/2-110,t-i-70);E.add(p),E.add(R),E.setInteractive(new(r().Geom.Rectangle)(0,0,f,50),r().Geom.Rectangle.Contains),E.on("pointerdown",(()=>{o.destroy(),a.destroy(),d.destroy(),E.destroy(),this.resourceManager.resources[T.REPUTATION]=0,this.resourceManager.setVictoryCheckEnabled(!0),this.helpButton&&this.helpButton.setVisible(!0),this.scene.stop("UIScene"),this.scene.stop("GameScene"),this.scene.start("LevelSelectScene")})),E.on("pointerover",(()=>{p.setTint(14540253)})),E.on("pointerout",(()=>{p.clearTint()}))}replaceUnlockButtonWithLabel(e,t){const i=this.children.list.find((e=>"Container"===e.type&&"rewardsContainer"===e.name));if(!i)return;const n=(this.cameras.main.width-850)/2+300*e,s=i.list.find((t=>"Container"===t.type&&t.name===`unlock-button-${e}`));if(s){i.remove(s,!0);const e=25,t=this.add.text(n+125,510+e,"UNLOCKED",{fontSize:"18px",fontFamily:"Arial",color:"#ffcc00",align:"center",fontWeight:"bold",stroke:"#000000",strokeThickness:2}).setOrigin(.5);i.add(t)}else console.warn(`Could not find UNLOCK button for reward index ${e}`)}disableAllRewardsExcept(e){const t=this.children.list.find((e=>"Container"===e.type&&"rewardsContainer"===e.name));if(!t)return;const i=_.getAvailableRewards();let n=i&&i.rewardIds?i.rewardIds:[];const s=this.cameras.main.width,r=(s-850)/2;n.forEach(((i,n)=>{if(n===e)return;if(!this.rewardsManager.findRewardById(i))return;if(this.rewardsManager.isRewardUnlocked(i))return;const s=r+300*n,a=t.list.find((e=>"Container"===e.type&&e.name===`unlock-button-${n}`));if(a){t.remove(a,!0);const e=this.add.graphics();e.fillStyle(0,.5),e.fillRect(s,160,250,350),t.add(e)}}))}updateActionsPanel(){this.actionsContainer.removeAll(!0);let e=!1,t=0;if(null!==this.selectedCardIndex){e=!0;const i=this.gameScene.selectedCard;if(i&&"event"===i.type){const e=this.gameScene.calculateCardCost(i);if(this.resourceManager.hasSufficientResources(e)){const e=this.createActionButton("Apply Event",(()=>{this.gameScene.applyEvent(this.selectedCardIndex)}),34816,100,30,"blueGlossSquareButton");e.y=t,this.actionsContainer.add(e),t+=this.buttonHeight+10}else{const e=this.createDisabledButton("Apply Event","Not enough resources",100,this.buttonHeight);e.y=t,this.actionsContainer.add(e),t+=this.buttonHeight+10}}const n=this.createActionButton("Discard",(()=>{this.cardManager.discardCard(this.selectedCardIndex),this.selectedCardIndex=null,this.gameScene.selectedCard=null,this.gameScene.selectedCardIndex=void 0,this.gameScene.clearIllegalTileShading(),this.clearInfoPanel(),this.refreshUI(),this.updateEndTurnButton(),this.showMessage("Card discarded")}),13369344,100,30,"discardButton");n.y=t,this.actionsContainer.add(n),t+=this.buttonHeight+10}else if(this.selectedCell&&this.selectedCell.building){const i=this.gameScene.buildingActionManager.getBuildingActions(this.selectedCell.building);i&&i.length>0&&(e=!0,i.forEach((e=>{let i=e.name;e.cost&&Object.entries(e.cost).forEach((([e,t],n)=>{i+=`${0===n?": -":", -"}${t} ${e}`})),e.effects&&e.effects.forEach((e=>{"addResource"===e.type&&(i+=`, +${e.amount} ${e.resource}`)}));const n=this.gameScene.buildingActionManager.isActionOnCooldown(this.selectedCell.x,this.selectedCell.y,e.action),s=this.gameScene.resourceManager.hasSufficientResources(e.cost),r="launchRocket"===e.action;let a=!0;if(r&&(a=this.selectedCell.hasRocket&&"fueled"===this.selectedCell.rocketState),n||!s||r&&!a){let o="Action unavailable";if(n){const t=this.gameScene.buildingActionManager.getActionCooldown(this.selectedCell.x,this.selectedCell.y,e.action);o=r?`Rocket in flight. Returns in ${t} turn${t>1?"s":""}.`:`On cooldown (${t} turns)`}else s?r&&!a&&(o="Need fuel to launch rocket"):o="Not enough resources";const d=this.createDisabledButton(i,o,350,this.buttonHeight,"blueGlossSquareButton");d.y=t,this.actionsContainer.add(d)}else{const n=this.createActionButton(i,(()=>{this.gameScene.executeAction(this.selectedCell.x,this.selectedCell.y,e.action),this.clearInfoPanel(),this.refreshUI()}),26316,350,this.buttonHeight,"blueGlossSquareButton");n.y=t,this.actionsContainer.add(n)}t+=this.buttonHeight+10})))}this.actionsContainer.setVisible(e)}createActionButton(e,t,i=10044672,n=100,s=30,a=null){const o=this.add.container(0,0);let d;a?(d=this.add.nineslice(0,0,a,null,n,s,10,10,10,10),d.setOrigin(0,0)):(d=this.add.graphics(),d.fillStyle(i,1),d.fillRoundedRect(0,0,n,s,5)),o.add(d);const c=this.add.text(n/2,s/2,e,{fontSize:"14px",fontFamily:"Arial",color:"#ffffff",align:"center",fontWeight:"bold"});return c.setOrigin(.5),o.add(c),o.setInteractive(new(r().Geom.Rectangle)(0,0,n,s),r().Geom.Rectangle.Contains),o.on("pointerover",(()=>{a?d.setTint(14540253):(d.clear(),d.fillStyle(10044672===i?13395456:1.2*i,1),d.fillRoundedRect(0,0,n,s,5))})),o.on("pointerout",(()=>{a?d.clearTint():(d.clear(),d.fillStyle(i,1),d.fillRoundedRect(0,0,n,s,5))})),o.on("pointerdown",t),o}createDisabledButton(e,t,i=100,n=30,s=null){const a=this.add.container(0,0);let o;s?(o=this.add.nineslice(0,0,s,null,i,n,10,10,10,10),o.setOrigin(0,0),o.setTint(8947848),o.setAlpha(.7)):(o=this.add.graphics(),o.fillStyle(5592405,.7),o.fillRoundedRect(0,0,i,n,5)),a.add(o);const d=this.add.text(i/2,n/2,e,{fontSize:"14px",fontFamily:"Arial",color:"#aaaaaa",align:"center"});return d.setOrigin(.5),a.add(d),a.setInteractive(new(r().Geom.Rectangle)(0,0,i,n),r().Geom.Rectangle.Contains),a.on("pointerover",(()=>{this.showTooltip(t,a.x+i/2,a.y-5)})),a.on("pointerout",(()=>{this.hideTooltip()})),a}showTooltip(e,t,i){this.hideTooltip(),this.tooltip=this.add.container(t,i);const n=this.add.graphics();n.fillStyle(0,.8);const s=this.add.text(0,0,e,{fontSize:"12px",fontFamily:"Arial",color:"#ffffff",align:"center"});s.setOrigin(.5,1);const r=s.width+10,a=s.height+10;n.fillRoundedRect(-r/2,-a,r,a,3),this.tooltip.add(n),this.tooltip.add(s),this.add.existing(this.tooltip),this.tooltip.setDepth(1e3)}hideTooltip(){this.tooltip&&(this.tooltip.destroy(),this.tooltip=null)}updateLaunchButtonState(){if(this.selectedCell&&this.selectedCell.building){const e=this.gameScene.buildingActionManager.getBuildingActions(this.selectedCell.building);e&&e.length>0&&this.updateActionsPanel()}}showCardChoices(e){if(this.choiceContainer.removeAll(!0),this.clearCardChoiceSelection(),0===e.length)return this.choicePanelContainer.setVisible(!1),void(this.choicePanelBg.visible=!1);this.choicePanelContainer.setVisible(!0),this.choicePanelBg.visible=!0,e.forEach(((e,t)=>{const i=t*(this.cardWidth+this.cardSpacing),n=this.add.container(i,0);let s,r="cardBackground";"prefab"===e.cardType.cardType?r="cardPrefabBackground":"event"===e.cardType.cardType&&(r="cardEventBackground");const a=this.add.rectangle(0,0,this.cardWidth,this.cardHeight,16777215,0);a.setOrigin(0,0),a.setInteractive(),a.on("pointerdown",(()=>{this.onCardChoiceClick(t)})),n.add(a),s=this.add.nineslice(0,0,r,null,this.cardWidth,this.cardHeight,10,10,35,15),s.setOrigin(0,0),n.add(s);const o=e.cardType?e.cardType.name:e.building.shortName,d=this.add.text(this.cardWidth/2,10,o,{fontSize:"12px",fontFamily:"Arial",color:"#000000",align:"center"});if(d.setOrigin(.5,0),n.add(d),"building"===e.type){const t=e.cardType&&e.cardType.cardTexture?e.cardType.cardTexture:e.building?e.building.texture:"placeholderTexture",i=this.add.sprite(this.cardWidth/2,45,t);if(i.setDisplaySize(40,40),i.setOrigin(.5),n.add(i),e.cardType&&e.cardType.cost){let t=75,i=this.gameScene.calculateCardCost(e),s=!1;for(const e in i)if(i[e]>0){s=!0;const r=e.charAt(0).toUpperCase()+e.slice(1),a=i[e],o=this.resourceManager.getResource(e)>=a?"#000000":"#ff0000",d=this.add.text(5,t,`${r}: ${a}`,{fontSize:"10px",fontFamily:"Arial",color:o});n.add(d),t+=12}if(!s){const e=this.add.text(5,75,"No cost",{fontSize:"10px",fontFamily:"Arial",color:"#000000"});n.add(e)}}}else if("event"===e.type){const t=e.cardType.cardTexture||"placeholderTexture",i=this.add.sprite(this.cardWidth/2,45,t);if(i.setDisplaySize(40,40),i.setOrigin(.5),n.add(i),e.cardType&&e.cardType.cost){let t=75,i=this.gameScene.calculateCardCost(e),s=!1;for(const e in i)if(i[e]>0){s=!0;const r=e.charAt(0).toUpperCase()+e.slice(1),a=i[e],o=this.resourceManager.getResource(e)>=a?"#000000":"#ff0000",d=this.add.text(5,t,`${r}: ${a}`,{fontSize:"10px",fontFamily:"Arial",color:o});n.add(d),t+=12}if(!s){const e=this.add.text(5,75,"No cost",{fontSize:"10px",fontFamily:"Arial",color:"#000000"});n.add(e)}}}this.choiceContainer.add(n)}))}onCardChoiceClick(e){if(this.gameScene&&this.gameScene.cardChoices&&e>=0&&e<this.gameScene.cardChoices.length){const t=this.gameScene.cardChoices[e];this.clearCardChoiceSelection(),this.showSelectedCard(t),this.selectedChoiceIndex=e,this.addGrabButtonToChoice(e)}}updateCardChoices(e){const t=this.selectedChoiceIndex;this.clearCardChoiceSelection(),this.choiceContainer.removeAll(!0),this.showCardChoices(e),null!==t&&t<e.length&&this.onCardChoiceClick(t)}hideCardChoices(){this.clearCardChoiceSelection(),this.choicePanelContainer.setVisible(!1),this.choicePanelBg.visible=!1}onCardChoiceClick(e){if(this.gameScene&&this.gameScene.cardChoices&&e>=0&&e<this.gameScene.cardChoices.length){const t=this.gameScene.cardChoices[e];this.clearCardChoiceSelection(),this.showSelectedCard(t),this.selectedChoiceIndex=e,this.addGrabButtonToChoice(e)}}addGrabButtonToChoice(e){this.grabButton&&(this.grabButton.destroy(),this.grabButton=null);const t=this.choiceContainer.getAt(e);if(!t)return;const i=80,n=70,s=t.x+this.choiceContainer.x+this.choicePanelContainer.x+this.cardWidth/2,a=t.y+this.choiceContainer.y+this.choicePanelContainer.y+this.cardHeight-30;this.grabButton=this.add.container(s,a);const o=this.add.graphics();o.fillStyle(1217808,1),o.fillRoundedRect(-40,-35,i,n,8),o.lineStyle(2,16777215,1),o.strokeRoundedRect(-40,-35,i,n,8),this.grabButton.add(o);const d=this.add.text(0,0,"GRAB",{fontSize:"16px",fontFamily:"Arial",color:"#FFFFFF",align:"center",fontWeight:"bold"});d.setOrigin(.5),this.grabButton.add(d),this.grabButton.setInteractive(new(r().Geom.Rectangle)(-40,-35,i,n),r().Geom.Rectangle.Contains),this.grabButton.on("pointerover",(()=>{o.clear(),o.fillStyle(1486355,1),o.fillRoundedRect(-40,-35,i,n,8),o.lineStyle(2,16777215,1),o.strokeRoundedRect(-40,-35,i,n,8)})),this.grabButton.on("pointerout",(()=>{o.clear(),o.fillStyle(1217808,1),o.fillRoundedRect(-40,-35,i,n,8),o.lineStyle(2,16777215,1),o.strokeRoundedRect(-40,-35,i,n,8)})),this.grabButton.on("pointerdown",(()=>{this.onGrabButtonClick(e)})),this.grabButton.setDepth(100)}onGrabButtonClick(e){this.gameScene&&null!==e&&e>=0&&e<this.gameScene.cardChoices.length&&(this.gameScene.selectCardChoice(e),this.selectedChoiceIndex=null,this.grabButton&&(this.grabButton.destroy(),this.grabButton=null))}clearCardChoiceSelection(){this.selectedChoiceIndex=null,this.grabButton&&(this.grabButton.destroy(),this.grabButton=null)}createHelpButton(){const e=36,t=this.cameras.main.width-e-10,i=this.add.container(t,5),n=this.add.nineslice(18,18,"barRoundLargeSquare",null,e,e,5,5,5,5);n.setOrigin(.5),i.add(n);const s=this.add.text(18,18,"i",{fontSize:"20px",fontFamily:"Arial",fontWeight:"bold",color:"#ffffff"});s.setOrigin(.5),i.add(s),i.setInteractive(new(r().Geom.Rectangle)(0,0,e,e),r().Geom.Rectangle.Contains),i.on("pointerover",(()=>{n.setTint(4487133)})),i.on("pointerout",(()=>{n.clearTint()})),i.on("pointerdown",(()=>{this.showTutorialPanel()})),i.setDepth(100),this.helpButton=i}showTutorialPanel(e=!1){this.tutorialContainer&&this.tutorialContainer.destroy();const t=this.cameras.main.width,i=this.cameras.main.height;this.tutorialContainer=this.add.container(0,0);const n=this.add.graphics();n.fillStyle(0,.9),n.fillRect(0,0,t,i),this.tutorialContainer.add(n);const s=800,r=600,a=(t-s)/2,o=(i-r)/2,d=this.add.nineslice(a+400,o+300,"panelGlassScrews",null,s,r,30,30,30,30);d.setOrigin(.5),d.setTint(2236979),this.tutorialContainer.add(d);const c=this.add.image(t/2,i/2-20,e?"tutorialPanel2":"tutorialPanel"),l=Math.min(760/c.width,520/c.height);c.setScale(l),this.tutorialContainer.add(c);const h=150,u=o+r-40-20;if(e){const e=t/2-h-10,s=this.createActionButton("BACK",(()=>{this.showTutorialPanel(!1)}),4491468,h,40,"blueGlossSquareButton");s.setPosition(e,u),this.tutorialContainer.add(s);const r=t/2+10,a=this.createActionButton("GOT IT",(()=>{const e=this.cameras.main.width-36-10+18,r=t/2,o=i/2;this.tutorialContainer.setPosition(r,o),this.tutorialContainer.iterate((e=>{e.x-=r,e.y-=o})),this.tweens.add({targets:[s,a],alpha:0,duration:200}),this.tutorialContainer.setScale(1),this.tweens.add({targets:this.tutorialContainer,x:e,y:23,scaleX:.05,scaleY:.05,duration:300,ease:"Cubic.easeIn",onComplete:()=>{this.tutorialContainer.destroy()}}),this.tweens.add({targets:n,alpha:0,duration:250,ease:"Cubic.easeOut"})}),4491468,h,40,"blueGlossSquareButton");a.setPosition(r,u),this.tutorialContainer.add(a)}else{const e=t/2-75,i=this.createActionButton("NEXT",(()=>{this.showTutorialPanel(!0)}),4491468,h,40,"blueGlossSquareButton");i.setPosition(e,u),this.tutorialContainer.add(i)}this.tutorialContainer.setDepth(1e3)}createEndTurnButtonEffect(){}playEndTurnButtonEffect(){try{const e=this.endTurnButton.x+50,t=this.endTurnButton.y+15;for(let i=0;i<this.buttonEffectConfig.quantity;i++){const i=this.add.sprite(e,t,"particleGlow");i.setTint(this.buttonEffectConfig.color),i.setScale(this.buttonEffectConfig.scale.start),i.setBlendMode(this.buttonEffectConfig.blendMode),i.setAlpha(this.buttonEffectConfig.alpha.start);const n=Math.random()*Math.PI*2,s=this.buttonEffectConfig.speed*(.5+.5*Math.random());this.tweens.add({targets:i,x:e+Math.cos(n)*s,y:t+Math.sin(n)*s,scale:this.buttonEffectConfig.scale.end,alpha:this.buttonEffectConfig.alpha.end,duration:this.buttonEffectConfig.lifespan,ease:"Power2",onComplete:()=>{i.destroy()}})}}catch(e){console.error("Error creating button effect:",e)}}}const q={type:r().AUTO,width:1200,height:800,parent:"game-container",backgroundColor:"#333333",scene:[U,j,$,Y],scale:{mode:r().Scale.FIT,autoCenter:r().Scale.CENTER_BOTH},physics:{default:"arcade",arcade:{gravity:{y:0},debug:!1}}};class K{constructor(){B(),this.game=new(r().Game)(q)}}window.onload=()=>{new K}},8883:(e,t,i)=>{e.exports=i.p+"assets/828ffd33d72a810a6205.png"},9345:(e,t,i)=>{e.exports=i.p+"assets/10daedf230983b9e0d44.png"},9495:(e,t,i)=>{e.exports=i.p+"assets/b69681bde705163bb199.png"}},i={};function n(e){var s=i[e];if(void 0!==s)return s.exports;var r=i[e]={id:e,exports:{}};return t[e].call(r.exports,r,r.exports,n),r.exports}n.m=t,e=[],n.O=(t,i,s,r)=>{if(!i){var a=1/0;for(l=0;l<e.length;l++){for(var[i,s,r]=e[l],o=!0,d=0;d<i.length;d++)(!1&r||a>=r)&&Object.keys(n.O).every((e=>n.O[e](i[d])))?i.splice(d--,1):(o=!1,r<a&&(a=r));if(o){e.splice(l--,1);var c=s();void 0!==c&&(t=c)}}return t}r=r||0;for(var l=e.length;l>0&&e[l-1][2]>r;l--)e[l]=e[l-1];e[l]=[i,s,r]},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.p="/",(()=>{var e={792:0};n.O.j=t=>0===e[t];var t=(t,i)=>{var s,r,[a,o,d]=i,c=0;if(a.some((t=>0!==e[t]))){for(s in o)n.o(o,s)&&(n.m[s]=o[s]);if(d)var l=d(n)}for(t&&t(i);c<a.length;c++)r=a[c],n.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return n.O(l)},i=self.webpackChunkmars_deck=self.webpackChunkmars_deck||[];i.forEach(t.bind(null,0)),i.push=t.bind(null,i.push.bind(i))})(),n.nc=void 0;var s=n.O(void 0,[96],(()=>n(8762)));s=n.O(s)})();